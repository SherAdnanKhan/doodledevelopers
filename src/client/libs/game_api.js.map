{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./app/js/components/GameApi.js","./app/js/components/CameraController/states/CameraViewState.js","./app/js/components/CameraController/states/CameraDebugState.js","./app/js/components/CameraController/movement_mode/CameraMovementMode.js","./app/js/components/CameraController/movement_mode/ImmediateMode.js","./app/js/components/CameraController/CameraController.js","./app/js/html_components/ApplicationView.js","./app/js/html_components/HomeView.js","./app/js/components/application_states/EmptyState.js","./app/js/components/application_states/level_player_states/Idle.js","./app/js/components/application_states/level_player_states/Empty.js","./app/js/components/application_states/level_player_states/GameStarted.js","./app/js/components/application_states/level_player_states/WaitingForStart.js","./app/js/components/application_states/level_player_states/LoadingLevelDescriptor.js","./app/js/components/application_states/level_player_states/GameOver.js","./app/js/components/game/EmptyGameListener.js","./app/js/components/GameListener.js","./app/js/components/game/components/WorldEntity.js","./app/js/components/game/components/Block.js","./app/js/components/game/components/Wall.js","./app/js/components/game/components/Ball.js","./app/js/components/game/LevelBuilder.js","./app/js/components/game/CollisionResolver.js","./app/js/components/game/Context.js","./app/js/components/game/Raycaster.js","./app/js/components/game/Simulation.js","./app/js/components/game/states/BaseState.js","./app/js/components/game/states/WaitingToStart.js","./app/js/components/game/states/Started.js","./app/js/components/game/states/GameOver.js","./app/js/components/game/states/ComputingScore.js","./app/js/components/game/states/WaitingForBallClear.js","./app/js/components/game/states/Firing.js","./app/js/components/game/GameStateLoader.js","./app/js/components/game/Game.js","./app/js/components/LineTracer.js","./app/js/components/entity_array_drawer/EntityArrayDrawer.js","./app/js/components/entity_array_drawer/BallArrayDrawer.js","./app/js/components/PointArrayDrawer.js","./app/js/components/game_renderable_components/RenderableEntity.js","./app/js/components/game_renderable_components/RenderableBall.js","./app/js/components/Configuration.js","./app/js/components/game_renderable_components/RenderableWall.js","./app/shaders/block/block.frag","./app/shaders/block/block.vert","./app/js/materials/BlockMaterial.js","./app/js/components/game_renderable_components/RenderableBlock.js","./app/js/components/GameRenderer.js","./app/shaders/gradient/gradient.frag","./app/shaders/gradient/gradient.vert","./app/js/materials/GradientMaterial.js","./app/js/components/GradientMesh.js","./app/js/components/application_states/LevelPlayer.js","./app/js/components/TestGameListener.js","./app/js/components/application_states/LevelTest.js","./app/js/components/application_states/networked_level_player_states/NetworkGameStarted.js","./app/js/components/application_states/networked_level_player_states/NetworkWaitingForStart.js","./app/js/components/application_states/networked_level_player_states/LoadingOnlineLevelDescriptor.js","./app/js/components/application_states/NetworkedLevelPlayer.js","./app/js/components/EditorGameListener.js","./app/js/components/application_states/LevelEditor.js","./app/js/html_components/PlayingView.js","./app/js/html_components/EndGameView.js","./app/MainApplication.js","./app/api.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","class GameApi\n{\n  constructor()\n  {\n    this.end_point = undefined;\n    this.session_id = undefined;\n  }\n\n  set_end_point(end_point)\n  {\n    this.end_point = end_point;\n  }\n\n  set_session_id(session_id)\n  {\n    this.session_id = session_id;\n  }\n\n  load_level_descriptor(level_descriptor_callback)\n  {\n    if (!this.config_is_valid())\n    {\n      return;\n    }\n\n    fetch(this.end_point + '/game_sessions/' + this.session_id)\n      .then(\n        function(response)\n        {\n          if (response.status !== 200)\n          {\n            console.log('Looks like there was a problem with the server. Status Code: ' +\n            response.status);\n\n            localStorage.removeItem('game_session_id');\n            return;\n          }\n\n          response.json().then(function(data)\n          {\n            if (data.game_state)\n            {\n              level_descriptor_callback(data.game_state);\n            }\n          });\n        }\n      )\n      .catch(function(err)\n      {\n        console.log('Fetch Error :-S', err);\n      });\n  }\n\n  shoot(firing_dir)\n  {\n    let url = this.end_point + '/game/' + this.session_id + '/shoot';\n    let headers = {};\n    headers['Content-Type'] = 'application/json';\n\n    let body = JSON.stringify({\n      firing_dir: { x: firing_dir.x, y: firing_dir.y }\n    });\n\n    fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: body\n    });\n  }\n\n  config_is_valid()\n  {\n    if (this.end_point === undefined)\n    {\n      console.error('No api end point set');\n      return false;\n    }\n    if (this.session_id === undefined)\n    {\n      console.error('No session id set');\n      return false;\n    }\n    return true;\n  }\n\n  game_started()\n  {\n    let url = this.end_point + '/game/' + this.session_id + '/start';\n    let headers = {};\n    headers['Content-Type'] = 'application/json';\n\n    let body = JSON.stringify({\n    });\n\n    fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: body\n    });\n  }\n\n  validate_score(turn_number, points, time)\n  {\n    let url = this.end_point + '/game/' + this.session_id + '/validate_score';\n    let headers = {};\n    headers['Content-Type'] = 'application/json';\n\n    let body = JSON.stringify({\n      score: { \n        turn_number: turn_number, \n        points: points,\n        time: time \n      }\n    });\n\n\n    fetch(url, {\n        method: 'POST',\n        headers: headers,\n        body: body\n    }).then(\n      function(response)\n      {\n        if (response.status !== 200)\n        {\n          console.log('Looks like there was a problem with the server. Status Code: ' +\n          response.status);\n          return;\n        }\n\n        response.json().then(function(data)\n        {\n          console.log(\"VALIDATION:\", data);\n        });\n      }\n    )\n    .catch(function(err)\n    {\n      console.log('Fetch Error :-S', err);\n    });\n  }\n}\n\nexport default new GameApi();\n","export default class CameraViewState\n{\n  constructor()\n  {}\n\n  on_enter(camera_controller)\n  {}\n\n  on_exit(camera_controller)\n  {}\n\n  update(TIME, camera_controller)\n  {}\n}\n","import CameraViewState from '../states/CameraViewState';\n\nimport { Input }  from 'ohzi-core';\nimport { CameraUtilities } from 'ohzi-core';\n\nimport { Vector2 }  from 'three';\nimport { Vector3 }  from 'three';\nimport { Ray }      from 'three';\n\nexport default class CameraDebugState extends CameraViewState\n{\n  constructor(oobb)\n  {\n    super();\n    this.pan_speed = new Vector2();\n\n    this.zoom_speed = 0;\n    this.zoom_t = 0;\n\n    this.tilt_degrees = 70;\n    this.tilt_speed = 0;\n\n    this.vector_down_axis = new Vector3(0, -1, 0);\n    this.vector_up_axis   = new Vector3(0, 1, 0);\n    this.vector_back_axis = new Vector3(0, 0, -1);\n    this.vector_left_axis = new Vector3(-1, 0, 0);\n\n    this.tmp_dir = new Vector3();\n    this.tmp_ray = new Ray();\n\n    this.tmp_intersection = new Vector3();\n    this.tmp_mouse_dir = new Vector2();\n\n    this.last_point = new Vector3();\n\n    this.last_NDC = new Vector2();\n  }\n\n  on_enter(camera_controller)\n  {\n    this.t_damping = 0;\n  }\n\n  on_exit(camera_controller)\n  {\n  }\n\n  update(camera_controller)\n  {\n    if (!camera_controller.input_enabled)\n    {\n      return;\n    }\n\n    if (camera_controller.camera.isOrthographicCamera)\n    {\n      camera_controller.reference_zoom += Input.wheel_delta * 0.5;\n    }\n    else\n    {\n      camera_controller.reference_zoom += Input.wheel_delta * 0.5;\n    }\n\n    if (Input.left_mouse_button_pressed || Input.right_mouse_button_pressed)\n    {\n      this.last_point.copy(Input.NDC);\n      this.last_NDC.copy(Input.NDC);\n    }\n\n    if (Input.left_mouse_button_down)\n    {\n      let mouse_delta_dir = Input.NDC.clone().sub(this.last_NDC);\n\n      camera_controller.set_rotation_delta(mouse_delta_dir.x * -200,\n        mouse_delta_dir.y * -200);\n    }\n\n    if (Input.right_mouse_button_down)\n    {\n      let prev_point    = CameraUtilities.get_plane_intersection(camera_controller.reference_position, undefined, this.last_point).clone();\n      let current_point = CameraUtilities.get_plane_intersection(camera_controller.reference_position, undefined, Input.NDC).clone();\n      current_point.sub(prev_point);\n\n      camera_controller.reference_position.x -= current_point.x;\n      camera_controller.reference_position.y -= current_point.y;\n      camera_controller.reference_position.z -= current_point.z;\n      this.last_point.copy(Input.NDC);\n    }\n\n    this.last_NDC.copy(Input.NDC);\n  }\n}\n","export default class CameraMovementMode\n{\n  constructor()\n  {}\n\n  on_enter(camera_controller)\n  {}\n\n  on_exit(camera_controller)\n  {}\n\n  update(TIME, camera_controller)\n  {}\n}\n","\nimport CameraMovementMode from './CameraMovementMode';\n\nimport { Vector2 } from 'three';\nimport { Vector3 } from 'three';\nimport { Quaternion } from 'three';\nimport { Math as TMath } from 'three';\nexport default class ImmediateMode extends CameraMovementMode\n{\n  constructor()\n  {\n    super();\n    this.rotation_speed = new Vector2();\n\n    this.vector_forward_axis = new Vector3(0, 0, -1);\n    this.tmp_forward = new Vector3();\n\n    this.tmp_quat = new Quaternion();\n    this.tmp_camera_target_pos = new Vector3();\n  }\n\n  on_enter(camera_controller)\n  {\n    camera_controller.reference_rotation.copy(camera_controller.camera.quaternion);\n  }\n\n  update(camera_controller)\n  {\n    camera_controller.camera.quaternion.copy(camera_controller.reference_rotation);\n\n    this.tmp_forward.copy(this.vector_forward_axis);\n    let dir = this.tmp_forward.applyQuaternion(camera_controller.camera.quaternion);\n\n    camera_controller.reference_zoom = TMath.clamp(camera_controller.reference_zoom,\n      camera_controller.min_zoom, camera_controller.max_zoom);\n\n    camera_controller.camera.position.copy(camera_controller.reference_position).sub(dir.multiplyScalar(camera_controller.reference_zoom));\n\n    camera_controller.__last_reference_position.copy(camera_controller.reference_position);\n  }\n\n  get_target_camera_pos(camera_controller)\n  {\n    this.tmp_quat.copy(camera_controller.reference_rotation);\n    this.tmp_forward.copy(this.vector_forward_axis);\n\n    let dir = this.tmp_forward.applyQuaternion(this.tmp_quat);\n\n    let zoom = TMath.clamp(camera_controller.reference_zoom,\n      camera_controller.min_zoom, camera_controller.max_zoom);\n\n    this.tmp_camera_target_pos.copy(camera_controller.reference_position).sub(dir.multiplyScalar(zoom));\n    return this.tmp_camera_target_pos;\n  }\n}\n","import CameraViewState from './states/CameraViewState';\nimport CameraDebugState from './states/CameraDebugState';\nimport ImmediateMode from './movement_mode/ImmediateMode';\n\nimport { Screen } from 'ohzi-core';\nimport { Debug } from 'ohzi-core';\nimport { MathUtilities } from 'ohzi-core';\nimport { ArrayUtilities } from 'ohzi-core';\nimport { SceneManager } from 'ohzi-core';\n\nimport { Vector3 } from 'three';\nimport { Quaternion } from 'three';\nimport { Plane } from 'three';\nimport { PlaneHelper } from 'three';\nimport { Sphere } from 'three';\nimport { Matrix4 } from 'three';\nimport { Box3 } from 'three';\nimport { Math as TMath } from 'three';\n\nexport default class CameraController\n{\n  constructor()\n  {\n    this.camera = undefined;\n    this.camera_initial_rot = undefined;\n    this.camera_initial_pos = undefined;\n    this.current_state = new CameraViewState();\n\n    this.current_mode = new ImmediateMode();\n\n    this.point_of_interest = new Vector3();\n    this.normalized_zoom = 0;\n\n    this.vector_up_axis   = new Vector3(0, 1, 0);\n    this.vector_right_axis = new Vector3(1, 0, 0);\n    this.vector_forward_axis = new Vector3(0, 0, 1);\n    this.tmp_forward = this.vector_forward_axis.clone();\n    this.tmp_right = this.vector_right_axis.clone();\n\n    this.tmp_dir = new Vector3();\n\n    this.zoom = 10;\n    this.reference_zoom = 10;\n    this.orientation = 27; // degrees\n    this.tilt = 70;\n\n    this.reference_rotation = new Quaternion();\n    this.reference_position = new Vector3();\n    this.__last_reference_position = new Vector3();\n\n    this.tmp_size = new Vector3();\n    this.tmp_quat = new Quaternion();\n\n    this.min_zoom = 1;\n    this.max_zoom = 400;\n\n    this.current_tilt = 0;\n    this.current_orientation = 0;\n\n    this.input_enabled = true;\n    // this.debug_box = Debug.draw_cube(undefined,15);\n    // this.debug_zoom_box = Debug.draw_sphere(undefined,15, 0x00ff00);\n\n    this.projected_points = [];\n    for (let i = 0; i < 30; i++)\n    {\n      this.projected_points.push(Debug.draw_sphere(undefined, 0.5, 0x00ff00));\n    }\n    this.hide_projected_points();\n    this.projection_plane_helper = new PlaneHelper(new Plane(), 1, 0xff00);\n    this.projection_plane_helper.visible = false;\n    SceneManager.current.add(this.projection_plane_helper);\n\n    this.projection_sphere_helper = Debug.draw_sphere_helper(new Sphere(), 0xff0000);\n    this.projection_sphere_helper.material.transparent = true;\n    this.projection_sphere_helper.material.opacity = 0.3;\n    this.projection_sphere_helper.visible = false;\n  }\n\n  set_camera(camera)\n  {\n    this.camera = camera;\n    this.camera_initial_rot = camera.quaternion.clone();\n    this.camera_initial_pos = camera.position.clone();\n  }\n\n  set_state(state)\n  {\n    // console.log(\"camera controller state switch to: \" + state.constructor.name);\n    this.current_state.on_exit(this);\n    this.current_state = state;\n    this.current_state.on_enter(this);\n  }\n\n  set_mode(mode)\n  {\n    // console.log(\"camera controller mode switch to: \" + mode.constructor.name);\n\n    this.current_mode.on_exit(this);\n    this.current_mode = mode;\n    this.current_mode.on_enter(this);\n  }\n\n  set_normalized_zoom(zoom)\n  {\n    this.normalized_zoom = TMath.clamp(zoom, 0, 1);\n    // EventManager.fire_zoom_changed(this.normalized_zoom);\n  }\n\n  update_normalized_zoom(min_zoom, max_zoom)\n  {\n    let zoom = this.camera.position.distanceTo(this.reference_position);\n    this.normalized_zoom = MathUtilities.linear_map(zoom, min_zoom, max_zoom, 1, 0);\n    this.normalized_zoom = TMath.clamp(this.normalized_zoom, 0, 1);\n\n    // EventManager.fire_zoom_changed(this.normalized_zoom);\n  }\n\n  update()\n  {\n    if (this.debug_box)\n    {\n      this.debug_box.position.copy(this.reference_position);\n    }\n\n    // this.debug_zoom_box.position.copy(this.reference_position)\n    // this.debug_zoom_box.position.add(new Vector3(0,0,1Quaternion(this.quaternion).multiplyScalar(this.reference_zoom));\n\n    this.current_state.update(this);\n    this.current_mode.update(this);\n    this.update_normalized_zoom(this.min_zoom, this.max_zoom);\n  }\n\n  set_idle()\n  {\n    this.set_state(new CameraViewState());\n  }\n\n  camera_is_zoomed_out()\n  {\n    return this.normalized_zoom < 0.2;\n  }\n\n  set_debug_mode()\n  {\n    this.set_state(new CameraDebugState());\n  }\n\n  set_rotation(tilt, orientation)\n  {\n    this.old_orientation = this.current_orientation;\n\n    this.current_tilt = tilt || this.current_tilt;\n    this.current_orientation = orientation || this.current_orientation;\n    this.reference_rotation.copy(this.build_rotation(this.current_tilt, this.current_orientation));\n  }\n\n  set_tilt(tilt)\n  {\n    let new_tilt = new Quaternion().setFromAxisAngle(this.vector_right_axis, (-tilt / 360) * Math.PI * 2);\n    let old_tilt = new Quaternion().setFromAxisAngle(this.vector_right_axis, (-this.current_tilt / 360) * Math.PI * 2);\n    old_tilt.conjugate();\n\n    this.reference_rotation.multiply(old_tilt).multiply(new_tilt);\n    this.current_tilt = tilt;\n  }\n\n  set_rotation_delta(delta_x, delta_y)\n  {\n    this.current_orientation = (this.current_orientation + delta_x) % 360;\n    this.current_tilt += delta_y;\n\n    this.set_rotation(this.current_tilt, this.current_orientation);\n  }\n\n  lerp_rotation(from_tilt, to_tilt, from_orientation, to_orientation, t)\n  {\n    let raw_orientation = TMath.lerp(from_orientation, to_orientation, t);\n    if (Math.abs(to_orientation - from_orientation) > 180)\n    {\n      if (from_orientation > 180)\n      {\n        from_orientation = (from_orientation % 360) - 360;\n      }\n      if (to_orientation > 180)\n      {\n        to_orientation = (to_orientation % 360) - 360;\n      }\n    }\n\n    this.set_rotation(TMath.lerp(from_tilt, to_tilt, t),\n      TMath.lerp(from_orientation, to_orientation, t));\n    this.current_orientation = raw_orientation;\n  }\n\n  build_rotation(tilt, orientation)\n  {\n    let new_orientation = new Quaternion().setFromAxisAngle(this.vector_up_axis, (orientation / 360) * Math.PI * 2);\n    let new_tilt = new Quaternion().setFromAxisAngle(this.vector_right_axis, (-tilt / 360) * Math.PI * 2);\n\n    return new_orientation.multiply(new_tilt);\n  }\n\n  translate_forward(amount)\n  {\n    this.tmp_forward.copy(this.vector_forward_axis);\n    this.tmp_forward.applyQuaternion(this.camera.quaternion);\n\n    this.tmp_forward.y = 0;\n    this.tmp_forward.normalize();\n    this.reference_position.add(this.tmp_forward.multiplyScalar(amount));\n  }\n\n  translate_right(amount)\n  {\n    this.tmp_right.copy(this.vector_right_axis);\n    this.tmp_right.applyQuaternion(this.camera.quaternion);\n\n    this.reference_position.add(this.tmp_right.multiplyScalar(amount));\n  }\n\n  focus_on_bounding_box(bb, scale = 1)\n  {\n    if (this.camera.isOrthographicCamera)\n    {\n      bb.getSize(this.tmp_size);\n\n      let obj_x = this.tmp_size.x;\n      let obj_y = this.tmp_size.y;\n      let object_aspect = obj_x / obj_y;\n      if (Screen.aspect_ratio / object_aspect > 1)\n      {\n        this.camera.zoom = Screen.height / obj_y;\n      }\n      else\n      {\n        this.camera.zoom = Screen.width / obj_x;\n      }\n\n      bb.getCenter(this.reference_position);\n    }\n    else\n    {\n      let dir = new Vector3();\n      dir.copy(bb.max).sub(bb.min);\n\n      let p1 = bb.min.clone();\n\n      let p2 = p1.clone().add(new Vector3(dir.x, 0, 0));\n      let p3 = p1.clone().add(new Vector3(0, dir.y, 0));\n      let p4 = p1.clone().add(new Vector3(0, 0, dir.z));\n\n      let p5 = p1.clone().add(new Vector3(dir.x, 0, dir.z));\n      let p6 = p1.clone().add(new Vector3(0, dir.y, dir.z));\n      let p7 = bb.max.clone();\n      let p8 = p1.clone().add(new Vector3(dir.x, dir.y, 0));\n\n      this.focus_camera_on_points([p1, p2, p3, p4, p5, p6, p7, p8], scale);\n    }\n  }\n\n  get_zoom_to_focus_on_bounding_box(bb, tilt, orientation)\n  {\n    if (tilt !== undefined && orientation !== undefined)\n    {\n      this.tmp_quat.copy(this.reference_rotation);\n      this.reference_rotation.copy(this.build_rotation(tilt, orientation));\n    }\n\n    let original_zoom = this.reference_zoom;\n    let original_pos = new Vector3().copy(this.reference_position);\n    this.focus_camera_on_bounding_box(bb);\n    let target_zoom = this.reference_zoom;\n    this.reference_position.copy(original_pos);\n    this.reference_zoom = original_zoom;\n\n    if (tilt !== undefined && orientation !== undefined)\n    {\n      this.reference_rotation.copy(this.tmp_quat);\n    }\n\n    return target_zoom;\n  }\n\n  get_zoom_to_focus_on_points(points, scale)\n  {\n    let old_zoom = this.reference_zoom;\n    let old_pos = new Vector3().copy(this.reference_position);\n    this.focus_camera_on_points(points, scale);\n    let new_zoom = this.reference_zoom;\n    this.reference_zoom = old_zoom;\n    this.reference_position.copy(old_pos);\n    return new_zoom;\n  }\n\n  get_target_pos_to_focus_on_points(points, scale)\n  {\n    let old_zoom = this.reference_zoom;\n    let old_pos = new Vector3().copy(this.reference_position);\n    this.focus_camera_on_points(points, scale);\n    let new_pos = this.reference_zoom.clone();\n    this.reference_zoom = old_zoom;\n    this.reference_position.copy(old_pos);\n    return new_pos;\n  }\n\n  focus_camera_on_sphere(sphere, debug)\n  {\n    this.reference_zoom = this.get_zoom_to_sphere(sphere, debug);\n    this.reference_position.copy(sphere.center);\n  }\n\n  get_zoom_to_sphere(sphere, debug)\n  {\n    let v_fov = (this.camera.fov / 2) * Math.PI / 180;\n    let h_fov = (2 * Math.atan(Math.tan(v_fov) * this.camera.aspect)) / 2;\n\n    // if(debug )\n    // {\n    //  Debug.draw_math_sphere(sphere);\n    // }\n    // this.camera.zoom = 1/((sphere.radius*2) /(ViewApi.map.camera_controller.camera.top*2));\n    // this.camera.updateProjectionMatrix();\n\n    let distV = sphere.radius / Math.tan(v_fov);\n    let distH = sphere.radius / Math.tan(h_fov);\n    return Math.max(Math.abs(distH), Math.abs(distV));\n  }\n\n  hide_projected_points()\n  {\n    for (let i = 0; i < this.projected_points.length; i++)\n    {\n      this.projected_points[i].visible = false;\n    }\n  }\n\n  show_projected_points(points)\n  {\n    this.hide_projected_points();\n    for (let i = 0; i < points.length; i++)\n    {\n      this.projected_points[i].visible = true;\n      this.projected_points[i].position.copy(points[i]);\n    }\n  }\n\n  show_plane_projection(plane, size = 1)\n  {\n    this.projection_plane_helper.plane = plane;\n    this.projection_plane_helper.size = size;\n    this.projection_plane_helper.updateMatrixWorld();\n    this.projection_plane_helper.visible = true;\n  }\n\n  show_sphere_projection(sphere)\n  {\n    this.projection_sphere_helper.scale.set(sphere.radius, sphere.radius, sphere.radius);\n    this.projection_sphere_helper.position.copy(sphere.center);\n    this.projection_sphere_helper.visible = true;\n  }\n\n  focus_camera_on_points(points, zoom_scale = 1)\n  {\n    let points_sphere = new Sphere().setFromPoints(points);\n    let world_space_center = points_sphere.center;\n    let camera_forward = new THREE.Vector3(0, 0, 1).applyQuaternion(this.reference_rotation);\n\n    // let near_plane = points_sphere.center.clone().add(camera_forward.clone().multiplyScalar(points_sphere.radius));\n\n    let far_pos =  this.camera.position.clone().add(camera_forward.clone().multiplyScalar(100));\n    let near_plane = ArrayUtilities.get_closest_point(points, far_pos).clone();\n\n    let plane = new Plane().setFromNormalAndCoplanarPoint(camera_forward, near_plane);\n    let points_on_plane = [];\n\n    // this.show_plane_projection(plane, points_sphere.radius*2);\n    // this.show_sphere_projection(points_sphere);\n    let _projected_points = [];\n\n    for (let i = 0; i < points.length; i++)\n    {\n      let projected_point = new Vector3();\n\n      plane.projectPoint(points[i], projected_point);\n      projected_point.copy(points[i]);\n      // let line = new TLine3(points[i].clone(), this.camera.position.clone());\n      // plane.intersectLine(line, projected_point);\n\n      points_on_plane.push(projected_point.clone());\n      _projected_points.push(projected_point.clone());\n    }\n\n    this.show_projected_points(_projected_points);\n\n    let up = new THREE.Vector3(0, 1, 0).applyQuaternion(this.reference_rotation);\n    let right = up.clone().cross(camera_forward).normalize();\n\n    let mat = new Matrix4().set(right.x, up.x, camera_forward.x, world_space_center.x,\n      right.y, up.y, camera_forward.y, world_space_center.y,\n      right.z, up.z, camera_forward.z, world_space_center.z,\n      0,    0,                0,        1);\n\n    let inverse_mat = new Matrix4().getInverse(mat);\n    // let inverse_mat = this.camera.matrixWorldInverse.clone();\n\n    for (let i = 0; i < points_on_plane.length; i++)\n    {\n      points_on_plane[i].applyMatrix4(inverse_mat);\n    }\n\n    let size = new Vector3();\n    let box =  new Box3().setFromPoints(points_on_plane);\n    box.getSize(size);\n    // size.multiplyScalar(zoom_scale);\n\n    let projected_center = new Vector3();\n    box.getCenter(projected_center);\n\n    this.reference_position.copy(projected_center.applyMatrix4(mat).sub(camera_forward.clone().multiplyScalar(points_sphere.radius)));\n\n    // let zoom_scale_nofake = 1 + (zoom_scale-1)*2;\n    // this.reference_zoom = this.__get_zoom_to_show_rect((size.x/2)*zoom_scale_nofake, (size.y/2)*zoom_scale_nofake)+points_sphere.radius;\n    this.reference_zoom = this.__get_zoom_to_show_rect((size.x / 2), (size.y / 2), 1 + (1 - zoom_scale)) + points_sphere.radius;\n  }\n\n  get_current_tilt()\n  {\n    return this.current_tilt;\n  }\n\n  get_current_orientation()\n  {\n    return this.current_orientation;\n  }\n\n  __get_zoom_to_show_rect(width, height, scale = 1)\n  {\n    // let v_fov = (this.camera.fov/2) * Math.PI/180;\n    let v_fov = TMath.degToRad(this.camera.fov / 2);\n    let h_fov = (2 * Math.atan(Math.tan(v_fov) * this.camera.aspect)) / 2;\n\n    let distV = height / Math.tan(v_fov * scale);\n    let distH = width / Math.tan(h_fov * scale);\n    return Math.max(Math.abs(distH), Math.abs(distV));\n  }\n}\n","\nexport default class ApplicationView\n{\n  constructor()\n  {\n    this.name = undefined;\n    this.container = undefined;\n  }\n\n  start(name, container)\n  {\n    this.name = name;\n    this.container = container;\n  }\n\n  update()\n  {\n  }\n\n  on_resize()\n  {\n  }\n\n  show()\n  {\n  }\n\n  hide()\n  {\n  }\n}\n","import ApplicationView from './ApplicationView';\n\nexport default class HomeView extends ApplicationView\n{\n  start()\n  {\n    super.start('home', document.querySelector('.home'));\n  }\n\n  update()\n  {\n  }\n}\n","export default class EmptyState\n{\n  constructor()\n  {\n\n  }\n\n  on_enter()\n  {\n\n  }\n\n  on_exit()\n  {\n\n  }\n\n  update()\n  {\n\n  }\n}\n","export default class Idle\n{\n  constructor()\n  {\n\n  }\n\n  on_enter(level_player)\n  {\n\n  }\n\n  on_exit(level_player)\n  {\n\n  }\n\n  update(level_player)\n  {\n\n  }\n}\n","export default class Empty\n{\n  constructor()\n  {\n\n  }\n\n  on_enter(level_player)\n  {\n\n  }\n\n  on_exit(level_player)\n  {\n\n  }\n\n  update(level_player)\n  {\n\n  }\n}\n","import Empty from './Empty';\nexport default class GameStarted extends Empty\n{\n  constructor()\n  {\n    super();\n  }\n\n  on_enter(level_player)\n  {\n    level_player.player_view.show_start_playing_popup(false);\n    level_player.game.start();\n  }\n\n  update(level_player, delta_time, time_scale)\n  {\n    level_player.update_view();\n  }\n}\n","import GameStarted from './GameStarted';\n\nexport default class WaitingForStart\n{\n  constructor()\n  {\n\n  }\n\n  on_enter(level_player)\n  {\n    console.log('Asd');\n    level_player.player_view.show_start_playing_popup(true);\n    level_player.update_view();\n  }\n\n  on_exit(level_player)\n  {\n\n  }\n\n  update(level_player)\n  {\n    if (level_player.player_view.is_prepare_to_play_view_showing === false)\n    {\n      level_player.set_state(this.next_state());\n    }\n  }\n\n  next_state()\n  {\n    return new GameStarted();\n  }\n}\n","import WaitingForStart from './WaitingForStart';\nimport GameApi from '../../GameApi';\n\nexport default class LoadingLevelDescriptor\n{\n  constructor(level_descriptor)\n  {\n    this.level_descriptor = level_descriptor;\n  }\n\n  on_enter(level_player)\n  {\n    level_player.set_level_descriptor(this.level_descriptor);\n    this.set_next_state(level_player);\n  }\n\n  set_next_state(level_player)\n  {\n    let game = level_player.game;\n    if(game.can_play())\n    {\n      if(game.can_fire())\n      {\n        this.go_to_game_started(level_player);\n      }\n      else\n      {\n        this.go_to_waiting_for_start(level_player)\n      }\n    }\n    else\n    {\n      level_player.game_over();\n    }\n  }\n\n  go_to_game_started(level_player)\n  {\n    level_player.set_state(new GameStarted())\n  }\n  go_to_waiting_for_start(level_player)\n  {\n    level_player.set_state(new WaitingForStart());\n  }\n\n  on_exit(level_player)\n  {\n\n  }\n\n  update(level_player)\n  {\n\n  }\n\n}\n","export default class GameOver\n{\n  constructor()\n  {\n\n  }\n\n  on_enter(level_player)\n  {\n    level_player.update_view();\n    level_player.player_view.game_over();\n  }\n\n  on_exit(level_player)\n  {\n\n  }\n\n  update(level_player)\n  {\n\n  }\n}\n","export default class EmptyGameListener\n{\n  constructor()\n  {\n\n  }\n\n  on_block_created(block_id)\n  {\n\n  }\n\n  on_ball_created(ball)\n  {\n\n  }\n\n  on_wall_created(wall)\n  {\n\n  }\n\n  on_block_destroyed(block_id)\n  {\n\n  }\n\n  on_ball_destroyed(ball_id)\n  {\n\n  }\n\n  on_block_hit(block)\n  {\n\n  }\n\n  on_wall_destroyed(wall_id)\n  {\n\n  }\n\n  on_turn_ended(turn_number)\n  {\n\n  }\n\n  on_game_over()\n  {\n\n  }\n}\n","import EmptyGameListener from './game/EmptyGameListener';\n\nexport default class GameListener extends EmptyGameListener\n{\n  constructor(level_player)\n  {\n    super();\n\n    this.level_player = level_player;\n  }\n\n  on_block_destroyed(game_block)\n  {\n    this.level_player.remove_block(game_block);\n  }\n\n  on_ball_destroyed(game_ball)\n  {\n    this.level_player.remove_ball(game_ball);\n  }\n\n  on_wall_destroyed(wall)\n  {\n    this.level_player.remove_wall(wall);\n  }\n\n  on_block_created(game_block)\n  {\n    this.level_player.create_block(game_block);\n  }\n\n  on_ball_created(game_ball)\n  {\n    this.level_player.create_ball(game_ball);\n  }\n\n  on_wall_created(wall)\n  {\n    this.level_player.create_wall(wall);\n  }\n\n  on_turn_ended(turn)\n  {\n    this.level_player.turn_ended(turn);\n  }\n\n  on_block_hit(block)\n  {\n    let renderable_block = this.level_player.game_renderer.find_renderable_block(block);\n    renderable_block.hit();\n  }\n\n  on_game_over()\n  {\n    // console.log('GAME OVER');\n    this.level_player.game_over();\n  }\n}\n","import * as planck from 'planck-js';\n\nexport default class WorldEntity\n{\n  constructor(body)\n  {\n    this.body = body;\n  }\n\n  get_position()\n  {\n    return this.body.getPosition();\n  }\n\n  set_position(x, y)\n  {\n    this.body.setPosition(planck.Vec2(x, y));\n  }\n\n  get_immediate_position()\n  {\n    return this.body.getPosition();\n  }\n}\n","import WorldEntity from './WorldEntity';\n\nexport default class Block extends WorldEntity\n{\n  constructor(id, body, total_hp = 1, current_hp, color_image, points_per_hit = 1, points_per_destruction = 1)\n  {\n    super(body);\n    this.id = id;\n    this.is_block = true;\n\n    this.total_hp = total_hp;\n    this.current_hp = current_hp !== undefined ? current_hp : total_hp;\n\n    this.color_image = color_image;\n\n    this.points_per_hit = points_per_hit;\n    this.points_per_destruction = points_per_destruction;\n  }\n\n  get_size()\n  {\n    return {\n      x: 1,\n      y: 1\n    };\n  }\n}\n","import WorldEntity from './WorldEntity';\n\nexport default class Wall extends WorldEntity\n{\n  constructor(body, side = 'bottom', board_width, board_height, color)\n  {\n    super(body);\n\n    this.side = side;\n    this.board_width = board_width;\n    this.board_height = board_height;\n    this.is_wall = true;\n    this.color = color;\n  }\n\n  get_normal()\n  {\n    if (this.side === 'left')\n    {\n      return { x: 1, y: 0 };\n    }\n    if (this.side === 'right')\n    {\n      return { x: -1, y: 0 };\n    }\n    if (this.side === 'bottom')\n    {\n      return { x: 0, y: 1 };\n    }\n    if (this.side === 'top')\n    {\n      return { x: 0, y: -1 };\n    }\n\n    console.error('Undefined side', this);\n  }\n\n  get_center()\n  {\n    return this.body.getPosition();// {x: this.body.position.x, y: this.body.position.y};\n  }\n}\n","import WorldEntity from './WorldEntity';\nimport * as planck from 'planck-js';\n\nexport default class Ball extends WorldEntity\n{\n  constructor(body)\n  {\n    super(body);\n    this.is_ball = true;\n\n    this.velocity = planck.Vec2(0, 0);\n  }\n\n  apply_impulse(force_x, force_y)\n  {\n    // this.body.applyLinearImpulse(planck.Vec2(force_x, force_y), this.body.getPosition());\n    this.velocity.x = force_x;\n    this.velocity.y = force_y;\n  }\n\n  get_size()\n  {\n    return this.body.getFixtureList()[0].shape.getRadius();\n  }\n}\n","import Block from './components/Block';\nimport Wall from './components/Wall';\nimport Ball from './components/Ball';\nimport * as planck from 'planck-js';\n\nexport default class LevelBuilder\n{\n  constructor(world)\n  {\n    this.world = world;\n    this.collision_groups = {\n      BALL: Math.pow(2, 0),\n      WALL: Math.pow(2, 1),\n      BLOCK: Math.pow(2, 2)\n    };\n  }\n\n  build_blocks(blocks_data, block_thickness)\n  {\n    let blocks = [];\n    for (let i = 0; i < blocks_data.length; i++)\n    {\n      let b = blocks_data[i];\n      blocks.push(new Block(\n        b.id,\n        this.create_block_body(b.x, b.y, block_thickness),\n        b.total_hp,\n        b.current_hp,\n        b.color_image,\n        b.points_per_hit,\n        b.points_per_destruction));\n    }\n    return blocks;\n  }\n\n  build_block(block_data, block_thickness)\n  {\n    let block_body = this.create_block_body(block_data.x, block_data.y, block_thickness);\n    return new Block(block_data.id,\n      block_body,\n      block_data.total_hp,\n      block_data.current_hp,\n      block_data.color_image,\n      block_data.points_per_hit,\n      block_data.points_per_destruction);\n  }\n\n  build_walls(board_width, board_height, color)\n  {\n    let walls = [];\n\n    let ground      = new Wall(this.create_wall_body('bottom',  board_width, board_height), 'bottom', board_width, board_height, color);\n    let left_wall   = new Wall(this.create_wall_body('left',    board_width, board_height), 'left',   board_width, board_height, color);\n    let right_wall  = new Wall(this.create_wall_body('right',   board_width, board_height), 'right',  board_width, board_height, color);\n    let upper_wall  = new Wall(this.create_wall_body('top',     board_width, board_height), 'top',    board_width, board_height, color);\n\n    walls.push(ground);\n    walls.push(left_wall);\n    walls.push(right_wall);\n    walls.push(upper_wall);\n\n    // let position = planck.Vec2(3, board_height / 2);\n    // let shape = planck.Edge(planck.Vec2(0, -board_height / 2), planck.Vec2(0, board_height / 2));\n    // let body = this.world.createBody({\n    //   type: 'static',\n    //   position: position,\n    //   friction: 0,\n    //   density: 0\n    // });\n\n    // body.createFixture({\n    //   shape: shape,\n    //   filterCategoryBits: this.collision_groups.WALL,\n    //   filterMaskBits: this.collision_groups.BALL,\n    //   userData: 'wall'\n    // });\n\n    // walls.push(new Wall(body, 'left', board_width, board_height));\n\n    // let position_2 = planck.Vec2(6, board_height / 2);\n    // let shape2 = planck.Edge(planck.Vec2(0, -board_height / 2), planck.Vec2(0, board_height / 2));\n    // let body2 = this.world.createBody({\n    //   type: 'static',\n    //   position: position_2,\n    //   friction: 0,\n    //   density: 0\n    // });\n\n    // body2.createFixture({\n    //   shape: shape2,\n    //   filterCategoryBits: this.collision_groups.WALL,\n    //   filterMaskBits: this.collision_groups.BALL,\n    //   userData: 'wall'\n    // });\n\n    // walls.push(new Wall(body2, 'right', board_width, board_height));\n\n    return walls;\n  }\n\n  create_wall_body(side = 'bottom', board_width = 0.1, board_height = 0.1)\n  {\n    let position = undefined;\n    let shape = undefined;\n\n    switch (side)\n    {\n    case 'bottom':\n      position = planck.Vec2(board_width / 2, 0);\n      shape = planck.Edge(planck.Vec2(-board_width / 2, 0.0), planck.Vec2(board_width / 2, 0));\n      break;\n    case 'left':\n      position = planck.Vec2(0, board_height / 2);\n      shape = planck.Edge(planck.Vec2(0, -board_height / 2), planck.Vec2(0, board_height / 2));\n      break;\n    case 'right':\n      position = planck.Vec2(board_width, board_height / 2);\n      shape = planck.Edge(planck.Vec2(0, -board_height / 2), planck.Vec2(0, board_height / 2));\n      break;\n    case 'top':\n      position = planck.Vec2(board_width / 2, board_height);\n      shape = planck.Edge(planck.Vec2(-board_width / 2, 0.0), planck.Vec2(board_width / 2, 0));\n      break;\n    }\n\n    let body = this.world.createBody({\n      type: 'static',\n      position: position,\n      friction: 0,\n      density: 0\n    });\n\n    body.createFixture({\n      shape: shape,\n      filterCategoryBits: this.collision_groups.WALL,\n      filterMaskBits: this.collision_groups.BALL,\n      userData: 'wall'\n    });\n\n    return body;\n  }\n\n  create_block_body(x = 0, y = 0, block_thickness = 0)\n  {\n    let body = this.world.createBody({\n      type: 'static',\n      position: planck.Vec2(x, y),\n      friction: 0,\n      density: 0\n    });\n\n    let width   = 1 + block_thickness;\n    let height  = 1 + block_thickness;\n    body.createFixture({\n      shape: planck.Box(width / 2, height / 2),\n      filterCategoryBits: this.collision_groups.BLOCK,\n      filterMaskBits: this.collision_groups.BALL,\n      userData: 'block'\n    });\n\n    return body;\n  }\n\n  build_ball(radius = 0.5)\n  {\n    let body = this.world.createDynamicBody({\n      // angularDamping: 0,\n      // linearDamping: 0\n      fixedRotation: true\n    });\n    body.setBullet(true);\n    body.createFixture(planck.Circle(radius), {\n      density: 1,\n      restitution: 1,\n      friction: 0,\n      userData: 'ball',\n      filterCategoryBits: this.collision_groups.BALL,\n      filterMaskBits: this.collision_groups.WALL | this.collision_groups.BLOCK\n    });\n    return new Ball(body);\n  }\n}\n","export default class CollisionResolver\n{\n  constructor(game)\n  {\n    this.game = game;\n    this.context = game.context;\n  }\n\n  on_impact(ball, impacted_fixture)\n  {\n    let user_data = impacted_fixture.getUserData();\n    if (user_data === 'block')\n    {\n      this.on_block_impact(impacted_fixture);\n    }\n    if (user_data === 'wall')\n    {\n      this.on_wall_impact(ball, impacted_fixture);\n    }\n  }\n\n  on_block_impact(block_fixture)\n  {\n    let block = this.context.get_block_by_body(block_fixture.getBody());\n\n    block.current_hp -= 1;\n    if (block.current_hp === 0)\n    {\n      this.context.remove_block_deferred(block);\n      this.game.add_points(block.points_per_destruction);\n    }\n    else\n    {\n      this.game.on_block_hit(block);\n      this.game.add_points(block.points_per_hit);\n    }\n  }\n\n  on_wall_impact(ball, floor_fixture)\n  {\n    let wall = this.context.get_wall_by_body(floor_fixture.getBody());\n    if (wall.side === 'bottom')\n    {\n      this.context.remove_ball_deferred(ball);\n    }\n  }\n\n  get_ball_on_wall_contact(fixA, fixB)\n  {\n    let ball = undefined;\n    let wall = undefined;\n\n    if (fixA.getUserData() === 'ball')\n    {\n      ball = this.context.get_ball_by_body(fixA.getBody());\n    }\n    if (fixB.getUserData() === 'ball')\n    {\n      ball = this.context.get_ball_by_body(fixB.getBody());\n    }\n    if (fixA.getUserData() === 'wall')\n    {\n      wall = this.context.get_wall_by_body(fixA.getBody());\n    }\n    if (fixB.getUserData() === 'wall')\n    {\n      wall = this.context.get_wall_by_body(fixB.getBody());\n    }\n\n    if (wall && ball)\n    {\n      return {\n        ball: ball,\n        wall: wall\n      };\n    }\n    return undefined;\n  }\n\n  get_ball_on_block_contact(fixA, fixB)\n  {\n    let ball = undefined;\n    let block = undefined;\n\n    if (fixA.getUserData() === 'ball')\n    {\n      ball = this.context.get_ball_by_body(fixA.getBody());\n    }\n    if (fixB.getUserData() === 'ball')\n    {\n      ball = this.context.get_ball_by_body(fixB.getBody());\n    }\n    if (fixA.getUserData() === 'block')\n    {\n      block = this.context.get_block_by_body(fixA.getBody());\n    }\n    if (fixB.getUserData() === 'block')\n    {\n      block = this.context.get_block_by_body(fixB.getBody());\n    }\n\n    if (block && ball)\n    {\n      return {\n        ball: ball,\n        block: block\n      };\n    }\n    return undefined;\n  }\n}\n","import * as planck from 'planck-js';\n\nexport default class Context\n{\n  constructor(world, game_listener)\n  {\n    this.blocks = [];\n    this.walls = [];\n    this.balls = [];\n\n    this.balls_to_be_removed = [];\n    this.blocks_to_be_removed = [];\n    this.walls_to_be_removed = [];\n\n    this.listener = game_listener;\n    this.world = world;\n  }\n\n  update()\n  {\n    this.check_for_pending_entities_to_be_removed();\n  }\n\n  add_wall(wall)\n  {\n    this.walls.push(wall);\n    this.listener.on_wall_created(wall);\n  }\n\n  remove_wall(destroyed_wall)\n  {\n    this.world.destroyBody(destroyed_wall.body);\n    this.walls = this.walls.filter((wall) =>\n    {\n      return destroyed_wall !== wall;\n    });\n    this.listener.on_wall_destroyed(destroyed_wall);\n  }\n\n  remove_wall_deferred(destroyed_wall)\n  {\n    this.walls_to_be_removed.push(destroyed_wall);\n  }\n\n  add_ball(ball)\n  {\n    this.balls.push(ball);\n    this.listener.on_ball_created(ball);\n  }\n\n  remove_ball(destroyed_ball)\n  {\n    this.world.destroyBody(destroyed_ball.body);\n    this.balls = this.balls.filter((ball) =>\n    {\n      return destroyed_ball !== ball;\n    });\n    this.listener.on_ball_destroyed(destroyed_ball);\n  }\n\n  remove_ball_deferred(destroyed_ball)\n  {\n    this.balls_to_be_removed.push(destroyed_ball);\n  }\n\n  add_block(block)\n  {\n    this.blocks.push(block);\n    this.listener.on_block_created(block);\n  }\n\n  remove_block(destroyed_block)\n  {\n    this.world.destroyBody(destroyed_block.body);\n    this.blocks = this.blocks.filter((block) =>\n    {\n      return destroyed_block !== block;\n    });\n    this.listener.on_block_destroyed(destroyed_block);\n  }\n\n  remove_block_deferred(destroyed_block)\n  {\n    this.blocks_to_be_removed.push(destroyed_block);\n  }\n\n  create_world()\n  {\n    let world = new planck.World({\n      gravity: planck.Vec2(0, 0)\n    });\n\n    return world;\n  }\n\n  check_for_pending_entities_to_be_removed()\n  {\n    while (this.balls_to_be_removed.length > 0)\n    {\n      this.remove_ball(this.balls_to_be_removed[0]);\n      this.balls_to_be_removed.shift();\n    }\n    while (this.blocks_to_be_removed.length > 0)\n    {\n      this.remove_block(this.blocks_to_be_removed[0]);\n      this.blocks_to_be_removed.shift();\n    }\n    while (this.walls_to_be_removed.length > 0)\n    {\n      this.remove_wall(this.walls_to_be_removed[0]);\n      this.walls_to_be_removed.shift();\n    }\n  }\n\n  get_ball_by_body(body)\n  {\n    for (let i = 0; i < this.balls.length; i++)\n    {\n      if (this.balls[i].body === body)\n      {\n        return this.balls[i];\n      }\n    }\n    return undefined;\n  }\n\n  get_block_by_body(body)\n  {\n    for (let i = 0; i < this.blocks.length; i++)\n    {\n      if (this.blocks[i].body === body)\n      {\n        return this.blocks[i];\n      }\n    }\n    return undefined;\n  }\n\n  get_wall_by_body(body)\n  {\n    for (let i = 0; i < this.walls.length; i++)\n    {\n      if (this.walls[i].body === body)\n      {\n        return this.walls[i];\n      }\n    }\n    return undefined;\n  }\n\n  dispose()\n  {\n    while (this.walls.length > 0)\n    {\n      this.remove_wall(this.walls[0]);\n    }\n    while (this.balls.length > 0)\n    {\n      this.remove_ball(this.balls[0]);\n    }\n    while (this.blocks.length > 0)\n    {\n      this.remove_block(this.blocks[0]);\n    }\n\n    this.check_for_pending_entities_to_be_removed();\n  }\n}\n","export default class Raycaster\n{\n  constructor()\n  {\n\n  }\n\n  raycast(p1, p2, world, ignore_fixture)\n  {\n    let result = undefined;\n\n    world.rayCast(p1, p2, (fixture, point, normal, fraction) =>\n    {\n      let valid = true;\n\n      // if(result !== undefined) //the first result is the closest contact point\n      //   valid = false;\n\n      if (fixture.getUserData() === 'ball')\n      {\n        valid = false;\n      }\n\n      if (ignore_fixture !== undefined && fixture === ignore_fixture)\n      {\n        valid = false;\n      }\n\n      if (valid)\n      {\n        if (result === undefined)\n        {\n          result = {\n            fixture: fixture,\n            point: point,\n            normal: normal,\n            fraction: fraction,\n            user_data: fixture.getUserData()\n          };\n        }\n        else\n        {\n          if (fraction < result.fraction)\n          {\n            result = {\n              fixture: fixture,\n              point: point,\n              normal: normal,\n              fraction: fraction,\n              user_data: fixture.getUserData()\n            };\n          }\n        }\n      }\n    });\n\n    return result;\n  }\n}\n","import * as planck from 'planck-js';\n\nimport Raycaster from './Raycaster';\n\nexport default class Simulation\n{\n  constructor(game_context, collision_resolver)\n  {\n    this.game_context = game_context;\n    this.collision_resolver = collision_resolver;\n  }\n\n  update(delta_time)\n  {\n    let balls = this.game_context.balls;\n\n    let raycaster = new Raycaster();\n    for (let i = 0; i < balls.length; i++)\n    {\n      let b = balls[i];\n\n      this.solve(raycaster, b, b.velocity.clone().mul(delta_time), undefined, 0);\n    }\n  }\n\n  solve(raycaster, b, velocity, ignore_fixture, invocaciones)\n  {\n    let current_pos = b.get_position();\n\n    let new_x = current_pos.x + velocity.x;\n    let new_y = current_pos.y + velocity.y;\n\n    let thickness = 0.2 * 0.01;\n\n    let skin_offset = velocity.clone();\n    skin_offset.normalize();\n    skin_offset.mul(thickness);\n\n    let result = raycaster.raycast(current_pos, planck.Vec2(new_x + skin_offset.x, new_y + skin_offset.y), this.game_context.world, ignore_fixture);\n    if (result === undefined)\n    {\n      b.set_position(new_x, new_y);\n    }\n    else\n    {\n      b.set_position(result.point.x - skin_offset.x, result.point.y - skin_offset.y);\n\n      let reflected_dir_x = (1 - result.fraction) * velocity.x - skin_offset.x;\n      let reflected_dir_y = (1 - result.fraction) * velocity.y - skin_offset.y;\n      let remaining_reflected_velocity = this.reflect_vector(planck.Vec2(reflected_dir_x, reflected_dir_y), result.normal);\n\n      let reflected_velocity = this.reflect_vector(b.velocity, result.normal);\n      b.velocity.x = reflected_velocity.x;\n      b.velocity.y = reflected_velocity.y;\n\n      this.collision_resolver.on_impact(b, result.fixture);\n\n      // Enable this to solve multiple bounces on the same frame\n      this.solve(raycaster, b, remaining_reflected_velocity, result.fixture, invocaciones + 1);\n    }\n  }\n\n  reflect_vector(dir, normal)\n  {\n    let n_dot_dir = planck.Vec2.dot(normal, dir);\n\n    let tmp = normal.clone();\n    tmp.mul(2 * n_dot_dir);\n\n    return planck.Vec2.sub(dir, tmp);\n  }\n}\n","export default class BaseState\n{\n  constructor()\n  {\n\n  }\n\n  on_enter(game)\n  {\n\n  }\n\n  on_exit(game)\n  {\n\n  }\n\n  update(game, delta_time, time_scale)\n  {\n\n  }\n\n  can_fire()\n  {\n    return false;\n  }\n  can_start()\n  {\n    return false;\n  }\n\n  import_state(state)\n  {\n\n  }\n  \n  export_state()\n  {\n    return {\n      type: 'BaseState'\n    };\n  }\n}\n","import BaseState from './BaseState';\n\nexport default class WaitingToStart extends BaseState\n{\n  constructor()\n  {\n    super();\n  }\n\n\n  can_start()\n  {\n    return true;\n  }\n\n  export_state()\n  {\n    return {\n      type: 'WaitingToStart'\n    };\n  }\n}\n","import BaseState from './BaseState';\n\nexport default class Started extends BaseState\n{\n  constructor()\n  {\n    super();\n  }\n\n  on_enter(game)\n  {\n    this.start_date = new Date();\n  }\n  on_exit(game)\n  {\n    game.elapsed_time = (new Date() - this.start_date)/1000.0;\n    console.log(\"STARTED TIME\", game.elapsed_time);\n  }\n\n  update(game, delta_time, time_scale)\n  {\n    game.elapsed_time = (new Date() - this.start_date)/1000.0;\n  }\n\n  can_fire()\n  {\n    return true;\n  }\n  \n  export_state()\n  {\n    return {\n      type: 'Started',\n      start_date: this.start_date.valueOf()\n    };\n  }\n  import_state(data)\n  {\n    this.start_date = new Date(data.start_date);\n  }\n}\n","import BaseState from './BaseState';\n\nexport default class GameOver extends BaseState\n{\n  constructor()\n  {\n    super();\n  }\n\n  on_enter(game)\n  {\n    game.over();\n  }\n\n\n  can_fire()\n  {\n    return false;\n  }\n\n  export_state()\n  {\n    return {\n      type: 'GameOver'\n    };\n  }\n}\n","import BaseState from './BaseState';\nimport WaitingToStart from './WaitingToStart';\nimport GameOver from './GameOver';\n\nexport default class ComputingScore extends BaseState\n{\n  constructor()\n  {\n    super();\n  }\n\n  on_enter(game)\n  {\n    game.scores[game.times_played].points  = game.current_points;\n    game.scores[game.times_played].time    = game.elapsed_time;\n\n    console.log(\"TOTAL TIME: \", game.elapsed_time)\n    game.times_played++;\n\n    if ( game.can_play() )\n    {\n      game.elapsed_time = 0;\n      game.reset_points();\n\n      game.set_state(new WaitingToStart());\n      game.reload_blocks();\n      \n      game.listener.on_turn_ended(game.times_played-1);\n    }\n    else\n    {\n      game.set_state(new GameOver());\n    }\n  }\n\n  can_fire()\n  {\n    return false;\n  }\n\n  export_state()\n  {\n    return {\n      type: 'ComputingScore'\n    };\n  }\n}\n","import ComputingScore from './ComputingScore';\nimport BaseState from './BaseState';\n\nexport default class WaitingForBallClear extends BaseState\n{\n  constructor()\n  {\n    super();\n  }\n\n  on_enter(game)\n  {\n    this.start_time = game.elapsed_time;\n  }\n  on_exit(game)\n  {\n    console.log(\"WAITFORCLEAR TIME\", game.elapsed_time - this.start_time);\n  }\n\n  update(game, delta_time , time_scale)\n  {\n    game.elapsed_time += delta_time * time_scale;\n\n    if (game.balls.length === 0)\n    {\n      game.set_state(new ComputingScore());\n    }\n  }\n\n  can_fire()\n  {\n    return false;\n  }\n\n  export_state()\n  {\n    return {\n      type: 'WaitingForBallClear'\n    };\n  }\n}\n","import LevelBuilder from '../LevelBuilder';\nimport WaitingForBallClear from './WaitingForBallClear';\nimport BaseState from './BaseState';\n\nexport default class Firing extends BaseState\n{\n  constructor(firing_direction)\n  {\n    super();\n    this.firing_direction = firing_direction;\n\n    this.firing_rate = 0;\n    this.elapsed_time_since_firing = 0;\n\n    this.firing_velocity = { x: 0, y: 0 };\n\n    this.remaining_balls_to_fire = -1;\n\n  }\n\n  on_enter(game)\n  {\n    this.firing_velocity.x = this.firing_direction.x * game.firing_speed;\n    this.firing_velocity.y = this.firing_direction.y * game.firing_speed;\n\n    this.remaining_balls_to_fire = game.amount_of_balls_to_fire;\n    this.firing_rate = game.firing_rate;\n    this.elapsed_time_since_firing = 0;\n    this.start_time = game.elapsed_time;\n    this.fire_ball(game);\n  }\n\n  on_exit(game)\n  {\n    console.log(\"FIRING TIME\", game.elapsed_time - this.start_time);\n  }\n\n  update(game, delta_time, time_scale)\n  {\n    if (this.remaining_balls_to_fire > 0)\n    {\n      if (this.elapsed_time_since_firing > this.firing_rate)\n      {\n        this.fire_ball(game);\n        this.elapsed_time_since_firing -= this.firing_rate;\n        this.remaining_balls_to_fire -= 1;\n      }\n      \n    }\n\n    this.elapsed_time_since_firing += delta_time * time_scale;\n    game.elapsed_time += delta_time * time_scale;\n    \n    if (this.remaining_balls_to_fire === 0)\n    {\n      game.set_state(new WaitingForBallClear());\n    }\n\n\n  }\n\n  fire_ball(game)\n  {\n    let ball = new LevelBuilder(game.world).build_ball(game.level_descriptor.ball_radius);\n\n    ball.set_position(game.firing_position.x, game.firing_position.y);\n    ball.apply_impulse(this.firing_velocity.x, this.firing_velocity.y);\n    game.context.add_ball(ball);\n  }\n\n  can_fire()\n  {\n    return false;\n  }\n\n  export_state()\n  {\n    return {\n      type: 'Firing'\n    };\n  }\n}\n","import BaseState            from './states/BaseState';\nimport WaitingToStart       from './states/WaitingToStart';\nimport Started              from './states/Started';\nimport Firing               from './states/Firing';\nimport WaitingForBallClear  from './states/WaitingForBallClear';\nimport ComputingScore       from './states/ComputingScore';\nimport GameOver             from './states/GameOver';\n\nexport default class GameStateLoader\n{\n\n  load(state_data)\n  {\n    let state = undefined;\n    switch(state_data.type)\n    {\n      case 'BaseState':\n        state = new BaseState();\n        break;\n      case 'WaitingToStart':\n        state = new WaitingToStart();\n        break;\n      case 'Started':\n        state = new Started();\n        break;\n      case 'Firing':\n        state = new Firing();\n        break;\n      case 'WaitingForBallClear':\n        state = new WaitingForBallClear();\n        break;\n      case 'ComputingScore':\n        state = new ComputingScore();\n        break;\n      case 'GameOver':\n        state = new GameOver();\n        break;\n      default:\n        state = new BaseState();\n        break;\n    }\n\n    state.import_state(state_data);\n    return state;\n  }\n}","import * as planck from 'planck-js';\nimport LevelBuilder from './LevelBuilder';\nimport CollisionResolver from './CollisionResolver';\nimport EmptyGameListener from './EmptyGameListener';\nimport Context from './Context';\n\nimport Simulation from './Simulation';\n\nimport BaseState from './states/BaseState';\nimport WaitingToStart from './states/WaitingToStart';\nimport Started from './states/Started';\nimport Firing from './states/Firing';\nimport GameOver from './states/GameOver';\nimport GameStateLoader from './GameStateLoader';\n\nclass Game\n{\n  constructor(listener)\n  {\n    listener = listener || new EmptyGameListener();\n\n    this.listener = listener;\n    this.world = this.create_world();\n    this.context = new Context(this.world, this.listener);\n\n    this.collision_resolver = new CollisionResolver(this);\n\n    this.level_descriptor = undefined;\n\n    this.current_points     = 0;\n\n    this.total_attempts     = 0;\n    this.times_played       = 0;\n\n    this.amount_of_balls_to_fire = 50;\n\n    this.firing_rate = 0.3;\n    this.firing_speed = 20;\n\n    this.simulation = new Simulation(this.context, this.collision_resolver);\n\n    this.current_state = new BaseState();\n\n    this.elapsed_time = 0;\n\n    this.scores = [];\n  }\n\n  get blocks()\n  {\n    return this.context.blocks;\n  }\n\n  get walls()\n  {\n    return this.context.walls;\n  }\n\n  get balls()\n  {\n    return this.context.balls;\n  }\n\n  set_state(new_state)\n  {\n    // console.log(\"GAME -- new state\", new_state.constructor.name);\n    this.current_state.on_exit(this);\n    this.current_state = new_state;\n    this.current_state.on_enter(this);\n  }\n\n  fire_balls(firing_dir)\n  {\n    if (this.can_fire())\n    {\n      let dir = this.get_clamped_firing_direction(firing_dir);\n\n      // dir.x = 0;\n      // dir.y = 1;\n      this.set_state(new Firing(dir));\n    }\n  }\n\n  reset_points()\n  {\n    this.current_points = 0;\n  }\n\n  start()\n  {\n    if (this.current_state.can_start())\n    {\n      this.set_state(new Started());\n    }\n  }\n\n  add_points(value)\n  {\n    this.current_points += value;\n  }\n\n  can_fire()\n  {\n    return this.current_state.can_fire() && this.can_play();\n  }\n\n  can_play()\n  {\n    return this.times_played < this.total_attempts;\n  }\n\n  reload_blocks()\n  {\n    this.import_blocks(this.level_descriptor);\n  }\n\n  get remaining_attempts()\n  {\n    return this.total_attempts - this.times_played;\n  }\n\n  update(delta_time, time_scale = 1)\n  {\n    // time_scale = 2;\n\n    this.current_state.update(this, delta_time, time_scale);\n\n    this.simulation.update(delta_time * time_scale);\n    this.context.update();\n  }\n\n  get_clamped_firing_direction(firing_dir)\n  {\n    let angle = Math.atan2(Math.max(firing_dir.y, 0), firing_dir.x);\n\n    angle = Math.max(0.174, angle);\n    angle = Math.min(2.967, angle);\n\n    return { x: Math.cos(angle), y: Math.sin(angle) };\n  }\n\n  is_firing_dir_allowed(firing_dir)\n  {\n    let angle = Math.atan2(firing_dir.y, firing_dir.x);\n\n    return angle > 0.174 && angle < 2.967;\n  }\n\n  create_world()\n  {\n    let world = new planck.World({\n      gravity: planck.Vec2(0, 0)\n    });\n\n    return world;\n  }\n\n  over()\n  {\n    // console.log('game over');\n    this.listener.on_game_over();\n  }\n\n  on_block_hit(block)\n  {\n    this.listener.on_block_hit(block);\n  }\n\n  import_state(level_descriptor)\n  {\n    this.level_descriptor = level_descriptor;\n\n    this.times_played             = this.level_descriptor.times_played || 0;\n    this.total_attempts           = this.level_descriptor.total_attempts;\n    this.amount_of_balls_to_fire  = this.level_descriptor.amount_of_balls_to_fire;\n\n    this.import_blocks(level_descriptor);\n    this.import_score(level_descriptor.scores, this.total_attempts);\n\n    if (level_descriptor.game_state === undefined)\n    {\n      level_descriptor.game_state = { type: 'WaitingToStart' }\n      ;\n    }\n\n    this.current_state = new GameStateLoader().load(level_descriptor.game_state);\n\n    this.elapsed_time  = 0;\n    this.elapsed_time  = level_descriptor.elapsed_time   === undefined ?  0     : level_descriptor.elapsed_time;\n  }\n\n  export_state()\n  {\n    return {\n      total_attempts: this.total_attempts,\n      times_played: this.times_played,\n      amount_of_balls_to_fire: this.amount_of_balls_to_fire,\n      ball_radius: this.level_descriptor.ball_radius,\n      ball_color: this.level_descriptor.ball_color,\n      wall_color: this.level_descriptor.wall_color,\n      board_width: this.level_descriptor.board_width,\n      board_height: this.level_descriptor.board_height,\n      last_generated_id: this.level_descriptor.last_generated_id,\n      blocks: this.export_blocks(),\n      scores: this.scores,\n      game_state: this.current_state.export_state(),\n      elapsed_time: this.elapsed_time\n    };\n  }\n\n  export_blocks()\n  {\n    let blocks = [];\n    for (let i = 0; i < this.blocks.length; i++)\n    {\n      let block = this.blocks[i];\n      if (block.id !== -1)\n      {\n        blocks.push({\n          id: block.id,\n          x: block.get_position().x,\n          y: block.get_position().y,\n          color_image: block.color_image,\n          total_hp: block.total_hp,\n          current_hp: block.current_hp,\n          points_per_hit: block.points_per_hit,\n          points_per_destruction: block.points_per_destruction\n        });\n      }\n    }\n    return blocks;\n  }\n\n  import_blocks(level_descriptor)\n  {\n    this.dispose();\n\n    let level_builder = new LevelBuilder(this.world);\n\n    let thickness = level_descriptor.ball_radius * 2;\n    let blocks = level_builder.build_blocks(level_descriptor.blocks, thickness);\n\n    let walls = level_builder.build_walls(level_descriptor.board_width,\n      level_descriptor.board_height,\n      level_descriptor.wall_color);\n\n    for (let i = 0; i < blocks.length; i++)\n    {\n      this.context.add_block(blocks[i]);\n    }\n    for (let i = 0; i < walls.length; i++)\n    {\n      this.context.add_wall(walls[i]);\n    }\n\n    this.firing_position = { x: 0, y: 0 };\n    this.firing_position.x = level_descriptor.board_width / 2;\n    this.firing_position.y = level_descriptor.ball_radius * 2;\n  }\n\n  import_score(score, total_attempts)\n  {\n    // safe init\n    this.scores.length = 0;\n\n    for (let i = 0; i < total_attempts; i++)\n    {\n      this.scores.push({\n        points: 0,\n        time: 0\n      });\n    }\n\n    // import if exists\n    if (score && score.length === total_attempts)\n    {\n      this.scores = JSON.parse(JSON.stringify(score));\n    }\n  }\n\n  dispose()\n  {\n    this.context.dispose();\n  }\n}\n\nmodule.exports = Game;\n","import { Ray } from 'three';\nimport { Vector3 } from 'three';\n\nexport default class LineTracer\n{\n  constructor()\n  {\n\n  }\n\n  trace(origin, dir, walls)\n  {\n    let planes = [];\n    for (let i = 0; i < walls.length; i++)\n    {\n      planes.push(walls[i].get_normal_plane());\n    }\n\n    let collision_points = [];\n    let bounce_count = 2;\n\n    let ray = new Ray(origin.clone(), dir.clone());\n    while (bounce_count > 0)\n    {\n      bounce_count--;\n\n      let intersection = this.get_intersection(ray, planes);\n      if (intersection.point)\n      {\n        collision_points.push(intersection.point.clone());\n        let new_dir = ray.direction.clone().reflect(intersection.normal);\n        ray.origin.copy(intersection.point);\n        ray.origin.add(intersection.normal.clone().multiplyScalar(0.001));\n        ray.direction.copy(new_dir);\n      }\n    }\n\n    return collision_points;\n  }\n\n  get_intersection(ray, planes)\n  {\n    let intersections = [];\n\n    for (let i = 0; i < planes.length; i++)\n    {\n      let intersection = ray.intersectPlane(planes[i], new Vector3());\n      if (intersection)\n      {\n        intersections.push({\n          point: intersection,\n          normal: planes[i].normal\n        });\n      }\n    }\n\n    let closest_intersection = intersections[0];\n\n    for (let i = 1; i < intersections.length; i++)\n    {\n      if (intersections[i].point.distanceTo(ray.origin) < closest_intersection.point.distanceTo(ray.origin))\n      {\n        closest_intersection = intersections[i];\n      }\n    }\n\n    return closest_intersection;\n  }\n}\n","import { SphereBufferGeometry } from 'three';\nimport { MeshBasicMaterial } from 'three';\nimport { InstancedMesh } from 'three';\nimport { Matrix4 } from 'three';\nimport { DynamicDrawUsage } from 'three';\n\nimport { SceneManager } from 'ohzi-core';\n\nexport default class EntityArrayDrawer\n{\n  constructor(entity_size = 1, max_allocations = 100)\n  {\n    this.max_allocations = max_allocations;\n    this.entity_size = entity_size;\n\n    let geo = new SphereBufferGeometry();\n    let mat = new MeshBasicMaterial({ color: 0x00ff00 });\n\n    this.mesh = new InstancedMesh(geo, mat, this.max_allocations);\n    this.mesh.instanceMatrix.usage = DynamicDrawUsage;\n\n    SceneManager.current.add(this.mesh);\n  }\n\n  draw_array(entities)\n  {\n    if (entities.length > this.max_allocations)\n    {\n      console.error('draw_array -- Exceeded maximum pre allocations', this.max_allocations, entities.length);\n      return;\n    }\n\n    let mat = new Matrix4();\n    mat.makeScale(this.entity_size, this.entity_size, this.entity_size);\n\n    for (let i = 0; i < entities.length; i++)\n    {\n      mat.setPosition(entities[i].position);\n      this.mesh.setMatrixAt(i, mat);\n    }\n\n    this.mesh.count = entities.length;\n    this.mesh.instanceMatrix.needsUpdate = true;\n  }\n\n  draw_point_array(points)\n  {\n    if (points.length > this.max_allocations)\n    {\n      console.error('draw_point_array -- Exceeded maximum pre allocations', this.max_allocations, points.length);\n      return;\n    }\n\n    let mat = new Matrix4();\n    mat.makeScale(this.entity_size, this.entity_size, this.entity_size);\n\n    for (let i = 0; i < points.length; i++)\n    {\n      mat.setPosition(points[i]);\n      this.mesh.setMatrixAt(i, mat);\n    }\n\n    this.mesh.count = points.length;\n    this.mesh.instanceMatrix.needsUpdate = true;\n  }\n\n  set_color(col)\n  {\n    this.mesh.material.color.set(col);\n  }\n\n  set_size(value)\n  {\n    this.entity_size = value;\n  }\n\n  show(boolean)\n  {\n    this.mesh.visible = boolean;\n  }\n\n  dispose()\n  {\n    SceneManager.current.remove(this.mesh);\n    this.mesh.geometry.dispose();\n    this.mesh.material.dispose();\n  }\n}\n","import EntityArrayDrawer from './EntityArrayDrawer';\n\nexport default class BallArrayDrawer extends EntityArrayDrawer\n{\n  constructor(size = 1, color = '#FF0000')\n  {\n    super(size, 200);\n    this.set_color(color);\n  }\n}\n","import BallArrayDrawer from './entity_array_drawer/BallArrayDrawer';\n\nexport default class PointArrayDrawer\n{\n  constructor()\n  {\n    this.total_available = 50;\n\n    this.ball_array_drawer = new BallArrayDrawer(0.1, '#bf5fff');\n  }\n\n  show(boolean)\n  {\n    this.ball_array_drawer.show(boolean);\n  }\n\n  draw(points, resample_count)\n  {\n    resample_count = resample_count || this.total_available;\n\n    // let catmull = new CatmullRomCurve3(points);\n    // let curve_length = catmull.getLength();\n\n    let new_points = [];\n\n    let dist = points[0].distanceTo(points[1]);\n\n    let separation_distance = 0.4;\n    let point_count = (dist / separation_distance);\n\n    for (let i = 0; i < point_count; i++)\n    {\n      let p0 = points[0].clone();\n      let pos = p0.clone().lerp(points[1], i / (point_count - 1));\n      pos.z = 3;\n\n      new_points.push(pos);\n    }\n\n    let dir = points[2].clone().sub(points[1]).normalize();\n\n    for (let i = 0; i < 7; i++)\n    {\n      let p0 = points[1].clone();\n      let pos = p0.add(dir.clone().multiplyScalar(i * separation_distance));\n      pos.z = 3;\n\n      new_points.push(pos);\n    }\n\n    this.ball_array_drawer.draw_point_array(new_points);\n  }\n\n  dispose()\n  {\n    this.ball_array_drawer.dispose();\n  }\n}\n","import { Vector3 } from 'three';\n\nexport default class RenderableEntity\n{\n  constructor()\n  {\n\n  }\n\n  update()\n  {\n\n  }\n\n  get position()\n  {\n    return new Vector3();\n  }\n\n  dispose()\n  {\n\n  }\n}\n","import RenderableEntity from './RenderableEntity';\nimport { Vector3 } from 'three';\n\nexport default class RenderableBall extends RenderableEntity\n{\n  constructor(game_ball)\n  {\n    super();\n\n    this.game_ball = game_ball;\n    // this.ball = Debug.draw_sphere(undefined, game_ball.get_size());\n    // this.ball.visible = false;\n    // let pos = this.game_ball.get_immediate_position();\n    // this.ball.position.set(pos.x, pos.y, 0);\n  }\n\n  update()\n  {\n    // this.ball.position.copy(this.get_position());\n  }\n\n  get position()\n  {\n    let pos = this.game_ball.get_position();\n    return new Vector3(pos.x, pos.y, 0);\n  }\n\n  get id()\n  {\n    return this.game_ball.id;\n  }\n\n  dispose()\n  {\n    // this.ball.material.dispose();\n    // this.ball.geometry.dispose();\n    // SceneManager.current.remove(ball.ball);\n\n  }\n}\n","class Configuration\n{\n  constructor()\n  {\n    this.wall_thickness = 0.025;\n\n    // this.api_url = 'http://localhost:3000/';\n    // this.api_url = 'https://redsix-game-server.herokuapp.com/';\n  }\n}\n\nexport default new Configuration();\n","import { Debug } from 'ohzi-core';\nimport { Vector3 } from 'three';\nimport { Plane } from 'three';\n\nimport Configuration from '../Configuration';\n\nexport default class RenderableWall\n{\n  constructor(game_wall)\n  {\n    this.game_wall = game_wall;\n    this.wall = Debug.draw_cube(undefined, undefined, game_wall.color);\n\n    let board_width = game_wall.board_width;\n    let board_height = game_wall.board_height;\n    let thickness = Configuration.wall_thickness;\n\n    let width = 1;\n    let height = 1;\n\n    switch (game_wall.side)\n    {\n    case 'bottom':\n      width = board_width + thickness * 2;\n      height = thickness;\n      break;\n    case 'left':\n      width = thickness;\n      height = board_height;\n      break;\n    case 'right':\n      width = thickness;\n      height = board_height;\n      break;\n    case 'top':\n      width = board_width + thickness * 2;\n      height = thickness;\n      break;\n    }\n\n    this.wall.scale.x = width;\n    this.wall.scale.y = height;\n\n    let wall_pos = this.game_wall.get_position();\n    this.wall.position.set(wall_pos.x, wall_pos.y, 0);\n\n    this.wall.updateMatrixWorld();\n  }\n\n  update()\n  {\n\n  }\n\n  get id()\n  {\n    return this.game_wall.id;\n  }\n\n  dispose()\n  {\n    this.wall.material.dispose();\n    this.wall.geometry.dispose();\n  }\n\n  get_normal_plane()\n  {\n    let normal_dir = this.game_wall.get_normal();\n    let center = this.game_wall.get_center();\n    return new Plane().setFromNormalAndCoplanarPoint(new Vector3(normal_dir.x, normal_dir.y, 0), new Vector3(center.x, center.y, 0));\n  }\n}\n","uniform sampler2D _MainTex;\nuniform float _Emission;\n\nvarying vec2 vUv;\n\n\nvoid main()\n{\n  vec4 col = texture2D(_MainTex, vUv);\n\n\n  gl_FragColor = col; \n  gl_FragColor.rgb = mix(col.rgb, vec3(1.0), _Emission);\n}","varying vec2 vUv;\n\n\nvoid main()\n{\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n  vUv = uv;\n}","import { BaseShaderMaterial } from 'ohzi-core';\nimport frag from '../../shaders/block/block.frag';\nimport vert from '../../shaders/block/block.vert';\n\nexport default class BlockMaterial extends BaseShaderMaterial\n{\n  constructor()\n  {\n    super(vert, frag, {\n      _MainTex: { value: undefined },\n      _Emission: { value: 0 }\n    });\n\n    this.transparent = true;\n    this.depthWrite = false;\n  }\n\n  set_texture(tex)\n  {\n    this.uniforms._MainTex.value = tex;\n  }\n\n  set_emission(val)\n  {\n    this.uniforms._Emission.value = val;\n  }\n}\n","import { Debug } from 'ohzi-core';\nimport { Time } from 'ohzi-core';\nimport { ResourceContainer } from 'ohzi-core';\n\nimport { Vector3 } from 'three';\n\nimport BlockMaterial from '../../materials/BlockMaterial';\n\nexport default class RenderableBlock\n{\n  constructor(game_block, color, image, text_element)\n  {\n    this.game_block = game_block;\n    this.block = Debug.draw_cube(undefined, undefined, '#FFFFFF');\n\n    this.block.material = new BlockMaterial();\n\n    this.block.material.set_texture(ResourceContainer.get(image));\n    this.block.scale.x = game_block.get_size().x;\n    this.block.scale.y = game_block.get_size().y;\n\n    let pos = this.game_block.get_immediate_position();\n    this.block.position.set(pos.x, pos.y, 0);\n\n    this.current_hp = game_block.current_hp;\n\n    // this.hp_label = new Text2D(game_block.current_hp, '40px Arial', '#FFFFFF');\n    this.hp_label = text_element;\n    this.hp_label.set_position(new Vector3(pos.x, pos.y, 0));\n    this.hp_label.set_size(0.5);\n    this.hp_label.text = this.current_hp + '';\n\n    // this.block.add(this.hp_label);\n\n    this.block.updateMatrixWorld();\n    // this.hp_label.updateMatrixWorld();\n\n    this.hit_animation_time = 0;\n  }\n\n  update()\n  {\n    let pos = this.game_block.get_immediate_position();\n    this.block.position.set(pos.x, pos.y, 0);\n    if (this.current_hp !== this.game_block.current_hp)\n    {\n      this.current_hp = this.game_block.current_hp;\n\n      this.hp_label.text = this.current_hp + '';\n    }\n\n    this.block.material.set_emission(this.hit_animation_time);\n\n    this.hit_animation_time -= Time.delta_time * 10;\n    this.hit_animation_time = Math.max(0, this.hit_animation_time);\n  }\n\n  update_position()\n  {\n    this.block.updateMatrixWorld();\n  }\n\n  update_image()\n  {\n    this.block.material.map = ResourceContainer.get(this.game_block.color_image);\n  }\n\n  get_position()\n  {\n    return this.block.position.clone();\n  }\n\n  get id()\n  {\n    return this.game_block.id;\n  }\n\n  dispose()\n  {\n    this.block.material.dispose();\n    this.block.geometry.dispose();\n\n    // this.hp_label.dispose();\n  }\n\n  show(bool)\n  {\n    this.block.visible = bool;\n  }\n\n  hit()\n  {\n    if (this.hit_animation_time < 0.01)\n    {\n      this.hit_animation_time = 1;\n    }\n  }\n}\n","import RenderableBall from './game_renderable_components/RenderableBall';\nimport RenderableWall from './game_renderable_components/RenderableWall';\nimport RenderableBlock from './game_renderable_components/RenderableBlock';\n\nimport BallArrayDrawer from './entity_array_drawer/BallArrayDrawer';\n\nimport { ArrayUtilities } from 'ohzi-core';\nimport { SceneManager } from 'ohzi-core';\nimport { SDFTextBatch } from 'ohzi-core';\nimport { ResourceContainer } from 'ohzi-core';\n\nexport default class GameRenderer\n{\n  constructor()\n  {\n    this.balls = [];\n    this.blocks = [];\n    this.walls = [];\n\n    this.ball_array_drawer = new BallArrayDrawer(0.1);\n\n    this.text_batch = undefined;\n  }\n\n  init()\n  {\n    this.text_batch = new SDFTextBatch(ResourceContainer.get('font_layout'), ResourceContainer.get('font_atlas'));\n    SceneManager.current.add(this.text_batch);\n    this.text_batch.renderOrder = 500;\n  }\n\n  update()\n  {\n    this.text_batch.update();\n    for (let i = 0; i < this.balls.length; i++)\n    {\n      this.balls[i].update();\n    }\n    for (let i = 0; i < this.blocks.length; i++)\n    {\n      this.blocks[i].update();\n    }\n    for (let i = 0; i < this.walls.length; i++)\n    {\n      this.walls[i].update();\n    }\n\n    this.ball_array_drawer.draw_array(this.balls);\n  }\n\n  create_ball(game_ball)\n  {\n    this.balls.push(new RenderableBall(game_ball));\n  }\n\n  create_block(game_block)\n  {\n    let text_element = this.text_batch.add_text('0');\n    this.blocks.push(new RenderableBlock(game_block, game_block.color, game_block.color_image, text_element));\n  }\n\n  create_wall(game_wall)\n  {\n    this.walls.push(new RenderableWall(game_wall));\n  }\n\n  remove_ball(game_ball)\n  {\n    let ball = this.find_renderable_ball(game_ball);\n\n    if (ball === undefined)\n    {\n      console.error('cannot remove non-existent renderable ball.', game_ball);\n    }\n    else\n    {\n      ball.dispose();\n      ArrayUtilities.remove_elem(this.balls, ball);\n    }\n  }\n\n  remove_block(game_block)\n  {\n    let block = this.find_renderable_block(game_block);\n\n    if (block === undefined)\n    {\n      console.error('cannot remove non-existent renderable block.', game_block);\n    }\n    else\n    {\n      block.dispose();\n      ArrayUtilities.remove_elem(this.blocks, block);\n\n      this.text_batch.remove_text(block.hp_label);\n\n      SceneManager.current.remove(block.block);\n    }\n  }\n\n  remove_wall(game_wall)\n  {\n    let wall = this.find_renderable_wall(game_wall);\n\n    if (wall === undefined)\n    {\n      console.error('cannot remove non-existent renderable wall.', game_wall);\n    }\n    else\n    {\n      wall.dispose();\n      ArrayUtilities.remove_elem(this.walls, wall);\n      SceneManager.current.remove(wall.wall);\n    }\n  }\n\n  find_renderable_ball(game_ball)\n  {\n    for (let i = 0; i < this.balls.length; i++)\n    {\n      if (this.balls[i].game_ball === game_ball)\n      {\n        return this.balls[i];\n      }\n    }\n    return undefined;\n  }\n\n  find_renderable_block(game_block)\n  {\n    for (let i = 0; i < this.blocks.length; i++)\n    {\n      if (this.blocks[i].game_block === game_block)\n      {\n        return this.blocks[i];\n      }\n    }\n    return undefined;\n  }\n\n  find_renderable_wall(game_wall)\n  {\n    for (let i = 0; i < this.walls.length; i++)\n    {\n      if (this.walls[i].game_wall === game_wall)\n      {\n        return this.walls[i];\n      }\n    }\n    return undefined;\n  }\n\n  dispose()\n  {\n    this.ball_array_drawer.dispose();\n\n    this.text_batch.dispose();\n    SceneManager.current.remove(this.text_batch);\n  }\n}\n","uniform vec3 _Col1;\nuniform vec3 _Col2;\nuniform vec2 _Screen;\nuniform sampler2D _BlueNoise;\n\nvarying vec2 vUv;\nvarying vec4 vProjPos;\n\nvec3 pow_v3(vec3 v, float p)\n{\n  return vec3(pow(v.x, p),pow(v.y, p),pow(v.z, p));\n}\n\nvoid main()\n{\n  vec2 screen_pos = vProjPos.xy / vProjPos.w;\n  screen_pos.x = screen_pos.x * 0.5 + 0.5;\n  screen_pos.y = screen_pos.y * 0.5 + 0.5;\n\n  vec2 noise_size = vec2(_Screen.x/64.0, _Screen.y/64.0);\n\n  vec2 noise_uv = vec2(fract(screen_pos.x * noise_size.x), fract(screen_pos.y * noise_size.y));\n  float noise = texture2D(_BlueNoise, noise_uv).r/255.0;\n\n  vec3 col1 = pow_v3(_Col1, 2.2);\n  vec3 col2 = pow_v3(_Col2, 2.2);\n\n  vec3 col = pow_v3(mix(col1, col2, vUv.y), 0.4545);\n\n\n\n\n  gl_FragColor = vec4(col + vec3(noise), 1.0); \n\n}","varying vec2 vUv;\nvarying vec4 vProjPos;\n\nvoid main()\n{\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n  vUv = uv;\n\n  vProjPos = gl_Position;\n}","import { BaseShaderMaterial } from 'ohzi-core';\nimport { ResourceContainer } from 'ohzi-core';\nimport { Screen } from 'ohzi-core';\n\nimport frag from '../../shaders/gradient/gradient.frag';\nimport vert from '../../shaders/gradient/gradient.vert';\n\nimport { Color } from 'three';\nimport { Vector2 } from 'three';\n\nexport default class GradientMaterial extends BaseShaderMaterial\n{\n  constructor()\n  {\n    super(vert, frag, {\n      _Col1: { value: new Color('#2A2B2C') },\n      _Col2: { value: new Color('#08090D') },\n      _BlueNoise: { value: ResourceContainer.get('blue_noise') },\n      _Screen: { value: new Vector2(Screen.width, Screen.height) }\n    });\n  }\n}\n","import { PlaneBufferGeometry } from 'three';\nimport GradientMaterial from '../materials/GradientMaterial';\n\nimport { Mesh } from 'three';\n\nexport default class GradientMesh extends Mesh\n{\n  constructor()\n  {\n    super(new PlaneBufferGeometry(), new GradientMaterial());\n  }\n\n  dispose()\n  {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n","import { Time } from 'ohzi-core';\nimport { Input } from 'ohzi-core';\nimport { TouchInput } from 'ohzi-core';\nimport { Debug } from 'ohzi-core';\nimport { SceneManager } from 'ohzi-core';\nimport { CameraManager } from 'ohzi-core';\n\nimport EmptyState from './EmptyState';\n\nimport { Vector3 } from 'three';\nimport { Vector2 } from 'three';\nimport { Math as TMath } from 'three';\n\nimport Idle                     from './level_player_states/Idle';\nimport WaitingForStart         from './level_player_states/WaitingForStart';\nimport Empty                    from './level_player_states/Empty';\nimport LoadingLevelDescriptor   from './level_player_states/LoadingLevelDescriptor';\nimport GameOver                 from './level_player_states/GameOver';\n\nimport GameListener from '../GameListener';\nimport Game from '../game/Game';\nimport LineTracer from '../LineTracer';\nimport PointArrayDrawer from '../PointArrayDrawer';\nimport GameRenderer from '../GameRenderer';\nimport GradientMesh from '../GradientMesh';\n\nexport default class LevelPlayer extends EmptyState\n{\n  constructor(player_view)\n  {\n    super();\n    this.game = new Game(new GameListener(this));\n\n    this.game_renderer = new GameRenderer();\n\n    this.line_tracer = new LineTracer();\n    this.point_array_drawer = new PointArrayDrawer();\n\n    this.firing_sphere = Debug.draw_sphere(undefined, 0.05, 0x00ff00);\n    this.firing_point = new Vector2();\n\n    this.current_level_descriptor = undefined;\n\n    this.gradient = new GradientMesh();\n\n    this.camera_drag_cooldown = 0;\n\n    this.player_view = player_view;\n\n    this.time_scale_strength = 0;\n\n    this.start_cooldown = 0.5;\n\n    this.current_state = new Empty();\n  }\n\n  set_state(new_state)\n  {\n    // console.log(\"new state\", new_state.constructor.name);\n\n    this.current_state.on_exit(this);\n    this.current_state = new_state;\n    this.current_state.on_enter(this);\n  }\n\n  update()\n  {\n    this.start_cooldown -= Time.delta_time;\n    if (this.player_view.is_prepare_to_play_view_showing)\n    {\n      this.start_cooldown = 0.5;\n      return;\n    }\n\n    if (TouchInput.touches === 2)\n    {\n      this.camera_drag_cooldown = 0.5;\n    }\n\n    this.game_renderer.update();\n    let mouse = new Vector3(Input.NDC.x, Input.NDC.y, 0).unproject(CameraManager.current);\n    let firing_dir = new Vector2(mouse.x - this.firing_point.x, mouse.y - this.firing_point.y).normalize();\n    if (Input.left_mouse_button_down && this.game.can_fire() && this.camera_drag_cooldown < 0.01)\n    {\n      let start_point = new Vector3(this.firing_point.x, this.firing_point.y, 0);\n\n      let clamped_firing_dir = this.game.get_clamped_firing_direction(firing_dir);\n\n      let points = this.line_tracer.trace(start_point, new Vector3(clamped_firing_dir.x, clamped_firing_dir.y, 0), this.game_renderer.walls);\n      points.unshift(start_point);\n      this.point_array_drawer.draw(points);\n      this.point_array_drawer.show(true);\n    }\n    else\n    {\n      this.point_array_drawer.show(false);\n    }\n\n    if (Input.left_mouse_button_released && this.camera_drag_cooldown < 0.01 && this.start_cooldown < 0 && this.game.can_fire())\n    {\n      this.fire(firing_dir);\n    }\n\n    this.time_scale_strength += Time.delta_time * (this.player_view.speed_up === true ? 1 : -1);\n    this.time_scale_strength = TMath.clamp(this.time_scale_strength, 0, 1);\n\n    this.game.update(Time.delta_time, TMath.lerp(1, 2, this.time_scale_strength));\n\n    this.camera_drag_cooldown -= Time.delta_time;\n    this.camera_drag_cooldown = Math.max(this.camera_drag_cooldown, 0);\n\n    this.current_state.update(this);\n  }\n\n  is_mouse_within_bounds()\n  {\n    return Input.uNDC.x > -1 && Input.uNDC.x < 1 && Input.uNDC.y > -1 && Input.uNDC.y < 1;\n  }\n\n  on_enter()\n  {\n    SceneManager.current.add(this.gradient);\n    this.game_renderer.init();\n  }\n\n  on_exit()\n  {\n    SceneManager.current.remove(this.gradient);\n    this.dispose();\n  }\n\n  update_view()\n  {\n    let player_view = this.player_view;\n    let game        = this.game;\n\n    for (let i = 0; i < game.scores.length; i++)\n    {\n      if (i === game.times_played)\n      {\n        player_view.set_score(i, game.current_points, game.elapsed_time);\n      }\n      else\n      {\n        player_view.set_score(i, game.scores[i].points, game.scores[i].time);\n      }\n    }\n    player_view.set_remaining_attempts(game.remaining_attempts);\n  }\n\n  fire(firing_dir)\n  {\n    this.game.fire_balls(firing_dir);\n  }\n\n  init_level(level_descriptor)\n  {\n    this.set_state(new LoadingLevelDescriptor(level_descriptor));\n  }\n\n  set_level_descriptor(level_descriptor)\n  {\n    this.game.import_state(level_descriptor);\n\n    this.firing_point.copy(new Vector2(this.game.firing_position.x, this.game.firing_position.y));\n    this.firing_sphere.position.x = this.firing_point.x;\n    this.firing_sphere.position.y = this.firing_point.y;\n\n    this.game_renderer.ball_array_drawer.set_color(level_descriptor.ball_color);\n    this.game_renderer.ball_array_drawer.set_size(level_descriptor.ball_radius);\n\n    this.firing_sphere.updateMatrixWorld();\n\n    this.current_level_descriptor = level_descriptor;\n\n    this.gradient.scale.x = level_descriptor.board_width;\n    this.gradient.scale.y = level_descriptor.board_height;\n    this.gradient.position.x = level_descriptor.board_width / 2;\n    this.gradient.position.y = level_descriptor.board_height / 2;\n    this.gradient.position.z = -2;\n    this.gradient.updateMatrixWorld();\n\n    this.player_view.setup_scores(this.game.scores);\n  }\n\n  export_level()\n  {\n    return this.game.export_state();\n  }\n\n  create_ball(game_ball)\n  {\n    this.game_renderer.create_ball(game_ball);\n  }\n\n  create_block(game_block)\n  {\n    this.game_renderer.create_block(game_block);\n  }\n\n  create_wall(game_wall)\n  {\n    this.game_renderer.create_wall(game_wall);\n  }\n\n  remove_ball(game_ball)\n  {\n    this.game_renderer.remove_ball(game_ball);\n  }\n\n  remove_block(game_block)\n  {\n    this.game_renderer.remove_block(game_block);\n  }\n\n  remove_wall(game_wall)\n  {\n    this.game_renderer.remove_wall(game_wall);\n  }\n\n  turn_ended(turn_number)\n  {\n    this.set_state(new WaitingForStart());\n  }\n\n  game_over()\n  {\n    this.set_state(new GameOver());\n  }\n\n  dispose()\n  {\n    this.game.dispose();\n    this.game_renderer.dispose();\n    this.point_array_drawer.dispose();\n\n    SceneManager.current.remove(this.firing_sphere);\n    this.firing_sphere.geometry.dispose();\n    this.firing_sphere.material.dispose();\n\n    this.gradient.dispose();\n  }\n}\n","class TestGameListener\n{\n  constructor()\n  {\n    this.balls_cleared = false;\n    this.game_over = false;\n  }\n\n  on_block_destroyed(game_block)\n  {\n    // console.log(\"on_block_destroyed\");\n  }\n\n  on_ball_destroyed(game_ball)\n  {\n    // console.log(\"on_ball_destroyed\");\n  }\n\n  on_wall_destroyed(wall)\n  {\n\n  }\n\n  on_block_created(game_block)\n  {\n  }\n\n  on_ball_created(game_ball)\n  {\n    // console.log(\"on_ball_created\");\n  }\n\n  on_wall_created(wall)\n  {\n\n  }\n\n  on_turn_ended()\n  {\n    this.balls_cleared = true;\n  }\n\n  on_game_over()\n  {\n    this.game_over = true;\n  }\n\n  on_block_hit()\n  {\n\n  }\n}\n\nmodule.exports = TestGameListener","import TestGameListener from '../TestGameListener';\nimport Game from '../game/Game';\n\nexport default class LevelTest\n{\n  constructor()\n  {\n\n  }\n\n  on_enter()\n  {\n\n  }\n\n  on_exit()\n  {\n\n  }\n\n  update()\n  {\n\n  }\n\n  turn_ended()\n  {\n\n  }\n\n  fire(firing_dir)\n  {\n\n  }\n\n  init_level(level_descriptor)\n  {\n    let game_listener = new TestGameListener();\n    let game = new Game(game_listener);\n\n    game.import_state(level_descriptor);\n    game.start();\n\n    let state = JSON.stringify(game.export_state());\n    console.log(JSON.parse(state));\n    setTimeout(() =>\n    {\n      game = new Game(game_listener);\n      game.import_state(JSON.parse(state));\n      let clamped_firing_dir  = game.get_clamped_firing_direction({ x: 0, y: 1 });\n      console.log('start');\n      if (game.can_fire())\n      {\n        game.fire_balls(clamped_firing_dir);\n        while (game_listener.balls_cleared === false &&\n                game_listener.game_over     === false)\n        {\n          game.update(0.016666, 4);\n        }\n      }\n\n      console.log('done');\n    }, 1000);\n  }\n}\n","import GameStarted from '../level_player_states/GameStarted';\nimport GameApi from '../../GameApi';\n\nexport default class NetworkGameStarted extends GameStarted\n{\n  constructor()\n  {\n    super();\n  }\n\n  on_enter(networked_level_player)\n  {\n    super.on_enter(networked_level_player);\n    // console.log(\"NETWORK START\");\n    GameApi.game_started();\n  }\n\n  \n\n}\n","import WaitingForStart from '../level_player_states/WaitingForStart';\n\nimport NetworkGameStarted from './NetworkGameStarted';\n\nexport default class NetworkWaitingForStart extends WaitingForStart\n{\n  constructor()\n  {\n    super();\n  }\n\n\n  next_state()\n  {\n    return new NetworkGameStarted();\n  }\n\n}\n","import NetworkWaitingForStart from './NetworkWaitingForStart';\nimport NetworkGameStarted from './NetworkGameStarted';\n\nimport LoadingLevelDescriptor from '../level_player_states/LoadingLevelDescriptor';\nimport GameApi from '../../GameApi';\n\nexport default class LoadingOnlineLevelDescriptor extends LoadingLevelDescriptor\n{\n  constructor()\n  {\n    super();\n    this.level_descriptor = undefined;\n  }\n\n  on_enter(networked_level_player)\n  {\n    this.start_loading(networked_level_player);\n  }\n\n\n  start_loading(networked_level_player)\n  {\n    let self = this;\n    GameApi.load_level_descriptor((level_descriptor) =>\n    {\n      networked_level_player.set_level_descriptor(level_descriptor);\n      self.set_next_state(networked_level_player)\n    });\n  }\n\n\n  go_to_game_started(networked_level_player)\n  {\n    networked_level_player.set_state(new NetworkGameStarted())\n  }\n  go_to_waiting_for_start(networked_level_player)\n  {\n    networked_level_player.set_state(new NetworkWaitingForStart());\n  }\n}\n","import LevelPlayer from './LevelPlayer';\nimport Idle from './level_player_states/Idle';\n\nimport LoadingOnlineLevelDescriptor from './networked_level_player_states/LoadingOnlineLevelDescriptor';\nimport NetworkWaitingForStart       from './networked_level_player_states/NetworkWaitingForStart';\nimport GameApi from '../GameApi';\n\nexport default class NetworkedLevelPlayer extends LevelPlayer\n{\n  constructor(player_view)\n  {\n    super(player_view);\n\n    this.current_state = new Idle();\n  }\n\n\n  turn_ended(turn_number)\n  {\n    this.set_state(new NetworkWaitingForStart());\n    GameApi.validate_score(turn_number, this.game.scores[turn_number].points, this.game.scores[turn_number].time)\n  }\n\n  fire(firing_dir)\n  {\n    super.fire(firing_dir);\n\n    GameApi.shoot(firing_dir);\n  }\n\n\n  init_level()\n  {\n    this.set_state(new LoadingOnlineLevelDescriptor());\n  }\n\n}\n","import EmptyGameListener from './game/EmptyGameListener';\n\nexport default class EditorGameListener extends EmptyGameListener\n{\n  constructor(editor_context)\n  {\n    super();\n\n    this.editor_context = editor_context;\n  }\n\n  on_block_created(game_block)\n  {\n    this.editor_context.create_block(game_block);\n  }\n\n  on_block_destroyed(game_block)\n  {\n    this.editor_context.remove_block(game_block);\n  }\n\n  on_wall_created(wall)\n  {\n    this.editor_context.create_wall(wall);\n  }\n\n  on_wall_destroyed(wall)\n  {\n    this.editor_context.remove_wall(wall);\n  }\n}\n","\nimport { Time } from 'ohzi-core';\nimport { Input } from 'ohzi-core';\nimport { MathUtilities } from 'ohzi-core';\nimport { SceneManager } from 'ohzi-core';\nimport { CameraManager } from 'ohzi-core';\n\nimport Game from '../game/Game';\nimport GameRenderer from '../GameRenderer';\n\nimport EmptyState from './EmptyState';\nimport LevelBuilder from '../game/LevelBuilder';\nimport GradientMesh from '../GradientMesh';\nimport EditorGameListener from '../EditorGameListener';\n\nimport { Vector3 } from 'three';\nimport { Vector2 } from 'three';\n\nexport default class LevelEditor extends EmptyState\n{\n  constructor()\n  {\n    super();\n    this.level_descriptor = undefined;\n\n    this.game_renderer = new GameRenderer();\n    this.game = new Game(new EditorGameListener(this));\n\n    this.mock_block = undefined;\n    this.renderable_mock_block = undefined;\n\n    this.gradient = new GradientMesh();\n  }\n\n  on_exit()\n  {\n    window.current_level_descriptor = this.export_level();\n    SceneManager.current.remove(this.gradient);\n    this.dispose();\n  }\n\n  on_enter()\n  {\n    SceneManager.current.add(this.gradient);\n    this.game_renderer.init();\n  }\n\n  init_level(level_descriptor)\n  {\n    this.dispose();\n\n    this.level_descriptor = level_descriptor;\n    this.game.import_state(this.get_editor_level_descriptor(level_descriptor));\n\n    let block_thickness = level_descriptor.ball_radius * 2;\n    this.mock_block = new LevelBuilder(this.game.world).build_block({\n      id: -1,\n      x: 0,\n      y: 0,\n      color_image: 'blue',\n      total_hp: 1\n    }, block_thickness);\n    this.game.context.add_block(this.mock_block);\n    this.renderable_mock_block = this.game_renderer.blocks[this.game_renderer.blocks.length - 1];\n\n    this.gradient.scale.x = level_descriptor.board_width;\n    this.gradient.scale.y = level_descriptor.board_height;\n    this.gradient.position.x = level_descriptor.board_width / 2;\n    this.gradient.position.y = level_descriptor.board_height / 2;\n    this.gradient.position.z = -2;\n    this.gradient.updateMatrixWorld();\n  }\n\n  export_level()\n  {\n    // let blocks = [];\n    // for(let i=0; i< this.game.blocks.length; i++)\n    // {\n    //   let block = this.game.blocks[i];\n    //   if(block.id !== -1)\n    //   {\n    //     blocks.push({\n    //       id: block.id,\n    //       x: block.get_position().x,\n    //       y: block.get_position().y,\n    //       color_image: block.color_image,\n    //       hp: block.total_hp\n    //     });\n    //   }\n    // }\n\n    let blocks = this.game.export_blocks();\n\n    let level_descriptor = {\n      total_attempts: this.level_descriptor.total_attempts,\n      ball_radius: this.level_descriptor.ball_radius,\n      ball_color: this.level_descriptor.ball_color,\n      wall_color: this.level_descriptor.wall_color,\n      board_width: this.level_descriptor.board_width,\n      board_height: this.level_descriptor.board_height,\n      blocks: blocks,\n      last_generated_id: this.level_descriptor.last_generated_id\n    };\n\n    return level_descriptor;\n  }\n\n  get_editor_level_descriptor(main_level_descriptor)\n  {\n    let level_descriptor = {\n      ball_radius: main_level_descriptor.ball_radius,\n      ball_color: main_level_descriptor.ball_color,\n      wall_color: '#FFFF00',\n      board_width: main_level_descriptor.board_width,\n      board_height: main_level_descriptor.board_height,\n      blocks: main_level_descriptor.blocks,\n      last_generated_id: this.level_descriptor.last_generated_id\n    };\n\n    return level_descriptor;\n  }\n\n  update()\n  {\n    this.game.update(Time.delta_time);\n    this.game_renderer.update();\n\n    let mouse = new Vector3(Input.NDC.x, Input.NDC.y, 0).unproject(CameraManager.current);\n    let position = new Vector2(Math.floor(mouse.x) + 0.5, Math.floor(mouse.y) + 0.5);\n\n    let is_point_widthin_bounds = this.point_is_within_bounds(position.x, position.y);\n    let is_point_over_a_block   = this.point_is_over_a_block(position.x, position.y);\n\n    this.set_mock_block_visibility(is_point_widthin_bounds, is_point_over_a_block);\n    this.set_mock_block_hp();\n\n    this.mock_block.set_position(position.x, position.y);\n    this.renderable_mock_block.update_position();\n\n    if (Input.left_mouse_button_pressed && is_point_widthin_bounds)\n    {\n      if (is_point_over_a_block)\n      {\n        this.destroy_nearest_block(position.x, position.y);\n      }\n      else\n      {\n        this.create_game_block(position.x, position.y, this.mock_block.color_image, this.mock_block.total_hp);\n      }\n    }\n\n    if (window.editor_settings.block_color !== this.mock_block.color_image)\n    {\n      this.mock_block.color_image = window.editor_settings.block_color;\n      this.renderable_mock_block.update_image();\n    }\n  }\n\n  set_mock_block_visibility(is_widthin_bounds, is_over_a_block)\n  {\n    if (is_widthin_bounds && !is_over_a_block)\n    {\n      this.renderable_mock_block.show(true);\n    }\n    else\n    {\n      this.renderable_mock_block.show(false);\n    }\n  }\n\n  set_mock_block_hp()\n  {\n    if (this.mock_block.total_hp !== window.editor_settings.block_hp)\n    {\n      this.mock_block.total_hp    = window.editor_settings.block_hp;\n      this.mock_block.current_hp  = window.editor_settings.block_hp;\n    }\n  }\n\n  point_is_within_bounds(x, y)\n  {\n    if (MathUtilities.between(x, 0, this.level_descriptor.board_width) &&\n       MathUtilities.between(y, 0, this.level_descriptor.board_height))\n    {\n      return true;\n    }\n    return false;\n  }\n\n  point_is_over_a_block(x, y)\n  {\n    let ref_pos = new Vector3(x, y, 0);\n\n    for (let i = 0; i < this.game_renderer.blocks.length; i++)\n    {\n      let b = this.game_renderer.blocks[i];\n      if (b !== this.renderable_mock_block)\n      {\n        if (b.get_position().distanceTo(ref_pos) < 0.1)\n        {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  destroy_nearest_block(x, y)\n  {\n    let ref_pos = new Vector3(x, y, 0);\n\n    for (let i = 0; i < this.game_renderer.blocks.length; i++)\n    {\n      let b = this.game_renderer.blocks[i];\n      if (b !== this.renderable_mock_block)\n      {\n        if (b.get_position().distanceTo(ref_pos) < 0.1)\n        {\n          this.game.context.remove_block(b.game_block);\n          return;\n        }\n      }\n    }\n  }\n\n  create_game_block(x, y, color_image = 'blue', total_hp = 1)\n  {\n    let block_thickness = this.level_descriptor.ball_radius * 2;\n\n    let block = new LevelBuilder(this.game.world).build_block({\n      id: this.level_descriptor.last_generated_id + 1,\n      x: x,\n      y: y,\n      total_hp: total_hp,\n      color_image: color_image,\n      points_per_hit: 10,\n      points_per_destruction: 25\n    }, block_thickness);\n\n    this.level_descriptor.last_generated_id++;\n    this.game.context.add_block(block);\n  }\n\n  create_ball(game_ball)\n  {\n    this.game_renderer.create_ball(game_ball);\n  }\n\n  create_block(game_block)\n  {\n    this.game_renderer.create_block(game_block);\n  }\n\n  create_wall(game_wall)\n  {\n    this.game_renderer.create_wall(game_wall);\n  }\n\n  remove_ball(game_ball)\n  {\n    this.game_renderer.remove_ball(game_ball);\n  }\n\n  remove_block(game_block)\n  {\n    this.game_renderer.remove_block(game_block);\n  }\n\n  remove_wall(game_wall)\n  {\n    this.game_renderer.remove_wall(game_wall);\n  }\n\n  dispose()\n  {\n    this.game.dispose();\n    this.game_renderer.dispose();\n  }\n}\n","import { Input } from 'ohzi-core';\nimport ApplicationView from './ApplicationView';\n\nexport default class PlayingView extends ApplicationView\n{\n  start(end_game_view)\n  {\n    super.start('playing', document.querySelector('.playing'));\n    this.end_game_view = end_game_view;\n\n    this.score = 0;\n    this.shot_time = 0;\n    this.best_shot = 0;\n\n    this.speed_up_el = document.querySelector('.playing__speed-up');\n    this.speed_up_rect = this.speed_up_el.getBoundingClientRect();\n    this.speed_up = false;\n\n    this.remaining_attempts_el = document.querySelector('.playing__remaining-attempts');\n\n    this.start_playing_el = document.querySelector('.shooting-ended');\n    this.continue_button = document.querySelector('.shooting-ended__continue');\n\n    this.scores_container = document.querySelector('.playing__shoots');\n    this.score_template = document.querySelector('.playing__shoot');\n\n    // this.start_playing_el.addEventListener('mousedown', this.on_shooting_ended_mouse_down.bind(this), false);\n    this.continue_button.addEventListener('mouseup', this.close_shooting_ended_message.bind(this), false);\n  }\n\n  setup_scores(scores)\n  {\n    this.scores_container.innerHTML = '';\n    for (let i = 0; i < scores.length; i++)\n    {\n      let score_container = this.score_template.cloneNode(true);\n\n      score_container.classList.add(`playing__shoot--${i}`);\n\n      this.set_shoot_score(score_container, i, scores[i].points, scores[i].time);\n\n      this.scores_container.append(score_container);\n    }\n    // console.log(\"SETUP\", scores);\n  }\n\n  get is_prepare_to_play_view_showing()\n  {\n    return !this.start_playing_el.classList.contains('hidden');\n  }\n\n  set_remaining_attempts(remaining_attempts)\n  {\n    this.remaining_attempts_el.textContent = remaining_attempts;\n  }\n\n  set_score(score_index, points, time)\n  {\n    // console.log(\"SET SCORE\", score_index, points, time);\n    let score_container = document.querySelector(`.playing__shoot--${score_index}`);\n\n    this.set_shoot_score(score_container, score_index, points, time);\n    this.set_final_score(points, time, score_index);\n  }\n\n  set_final_score(points, time, shot)\n  {\n    if (points > this.score)\n    {\n      this.score = points;\n      this.best_shot = shot;\n    }\n\n    else if (points === this.score)\n    {\n      if (time < this.shot_time)\n      {\n        this.score = points;\n        this.best_shot = shot;\n      }\n    }\n\n    if (shot === this.best_shot)\n    {\n      this.shot_time = time;\n    }\n  }\n\n  restart_scores()\n  {\n    this.score = 0;\n    this.best_shot = 0;\n    this.shot_time = 0;\n  }\n\n  set_shoot_score(score_container, index, points, time)\n  {\n    // console.log(score_container, index, points, time)\n    score_container.querySelector('.playing__shoot-number').textContent = `Shoot ${index + 1}: `;\n    score_container.querySelector('.playing__shoot-score').textContent = points;\n    score_container.querySelector('.playing__shoot-timer-time').textContent = time.toFixed(2);\n  }\n\n  show_start_playing_popup(boolean)\n  {\n    if (boolean)\n    {\n      this.start_playing_el.classList.remove('hidden');\n    }\n    else\n    {\n      this.start_playing_el.classList.add('hidden');\n    }\n  }\n\n  close_shooting_ended_message()\n  {\n    this.start_playing_el.classList.add('hidden');\n  }\n\n  update()\n  {\n    this.speed_up = false;\n\n    if (Input.left_mouse_button_down && Input.mouse_is_within_bounds(this.speed_up_rect))\n    {\n      this.speed_up = true;\n    }\n  }\n\n  game_over()\n  {\n    this.end_game_view.set_score(this.score, this.best_shot, this.shot_time);\n    this.end_game_view.show();\n  }\n}\n","import ApplicationView from './ApplicationView';\n\nexport default class EndGameView extends ApplicationView\n{\n  start(app)\n  {\n    super.start('end-game', document.querySelector('.end-game'));\n\n    this.app = app;\n\n    this.best_shot_el = document.querySelector('.end-game__best-shot');\n    this.time_el = document.querySelector('.end-game__timer-time');\n    this.score_el = document.querySelector('.end-game__score');\n\n    this.home_button = document.querySelector('.end-game__home-icon');\n    this.next_button = document.querySelector('.end-game__next');\n\n    this.home_button.addEventListener('click', this.on_home_button_click.bind(this));\n    this.next_button.addEventListener('click', this.on_next_button_click.bind(this));\n  }\n\n  set_score(score, best_shot, time)\n  {\n    this.best_shot_el.textContent = `Best shot: ${best_shot + 1}`;\n    this.time_el.textContent = time.toFixed(2);\n    this.score_el.textContent = `Score: ${score}`;\n  }\n\n  restart_game()\n  {\n    this.hide();\n    this.app.set_level();\n  }\n\n  blur_background()\n  {\n    document.querySelector('.playing__header').classList.add('blurred');\n    document.querySelector('.app-canvas').classList.add('blurred');\n    document.querySelector('.playing__footer').classList.add('blurred');\n  }\n\n  unblur_background()\n  {\n    document.querySelector('.playing__header').classList.remove('blurred');\n    document.querySelector('.app-canvas').classList.remove('blurred');\n    document.querySelector('.playing__footer').classList.remove('blurred');\n  }\n\n  on_home_button_click(event)\n  {\n    this.restart_game();\n  }\n\n  on_next_button_click(event)\n  {\n    this.restart_game();\n  }\n\n  show()\n  {\n    this.blur_background();\n    this.container.classList.remove('hidden');\n  }\n\n  hide()\n  {\n    this.unblur_background();\n    this.container.classList.add('hidden');\n  }\n}\n","import { BaseApplication } from 'ohzi-core';\nimport { Input } from 'ohzi-core';\nimport { TouchInput } from 'ohzi-core';\nimport { CameraManager } from 'ohzi-core';\nimport { PerspectiveCamera } from 'ohzi-core';\nimport { OrthographicCamera } from 'ohzi-core';\nimport { Screen } from 'ohzi-core';\nimport { NormalRender } from 'ohzi-core';\nimport { Graphics } from 'ohzi-core';\nimport { ResourceContainer } from 'ohzi-core';\nimport { SceneManager } from 'ohzi-core';\n\nimport CameraController from './js/components/CameraController/CameraController';\nimport HomeView from './js/html_components/HomeView';\n\nimport LevelPlayer  from './js/components/application_states/LevelPlayer';\nimport LevelTest    from './js/components/application_states/LevelTest';\n\nimport NetworkedLevelPlayer from './js/components/application_states/NetworkedLevelPlayer';\nimport LevelEditor from './js/components/application_states/LevelEditor';\nimport EmptyState from './js/components/application_states/EmptyState';\nimport Configuration from './js/components/Configuration';\nimport PlayingView from './js/html_components/PlayingView';\nimport EndGameView from './js/html_components/EndGameView';\n\nimport { Vector2 } from 'three';\nimport { Color } from 'three';\n// import {OrthographicCamera} from 'three'\n\nexport default class MainApplication extends BaseApplication\n{\n  constructor()\n  {\n    super();\n\n    this.camera_controller = new CameraController();\n    this.normal_render_mode = new NormalRender();\n\n    document.querySelector('canvas').addEventListener('contextmenu', (event) =>\n    {\n      event.preventDefault()\n      ;\n    }, false);\n    document.addEventListener('gesturestart', function(e)\n    {\n      e.preventDefault();\n    });\n    document.addEventListener('gestureend', function(e)\n    {\n      e.preventDefault();\n    });\n\n    SceneManager.current.autoUpdate = false;\n  }\n\n  get_random_color_image()\n  {\n    let arr = ['blue', 'green', 'purple', 'red', 'yellow'];\n\n    return arr[Math.floor(Math.random() * 5)];\n  }\n\n  start()\n  {\n    Graphics.set_state(this.normal_render_mode);\n\n    this.board_width = 0;\n    this.board_height = 0;\n    this.perspective_scale = 0;\n\n    this.lower_blank_space = 0;\n\n    CameraManager.current = new PerspectiveCamera(60, 1, 0.1, 200);\n    Graphics.update();\n    this.__init_camera();\n\n    this.__init_camera_controller();\n\n    this.config = ResourceContainer.get_resource('config');\n\n    // Debug.draw_axis();\n    // SceneManager.current.add(new Components.Grid());\n\n    this.home_view = new HomeView();\n    this.home_view.start();\n\n    this.end_game_view = new EndGameView();\n    this.end_game_view.start(this);\n\n    this.playing_view = new PlayingView();\n    this.playing_view.start(this.end_game_view);\n\n    this.squares = [];\n\n    this.current_state = new EmptyState();\n\n    // this.set_online_level();\n    // this.set_level();\n    // this.set_editor();\n\n    this.y_offset = 0;\n    this.target_y_offset = 0;\n    this.last_center = new Vector2();\n    this.previous_touch_count = 0;\n\n    this.settings = window.settings || {\n      columns: 9,\n      rows: 10,\n      board_width: 9,\n      board_height: 27,\n      perspective_scale: 1.4,\n      lower_blank_space: 2,\n      ball_radius: 0.1,\n      ball_count: 50\n    };\n\n    window.current_level_descriptor = this.get_dummy_level_descriptor(this.settings);\n  }\n\n  set_state(new_state)\n  {\n    this.current_state.on_exit();\n    this.current_state = new_state;\n    this.current_state.on_enter();\n  }\n\n  set_level(json)\n  {\n    this.playing_view.restart_scores();\n    this.set_state(new LevelPlayer(this.playing_view));\n    json = json || window.current_level_descriptor;\n    let level_descriptor = json || this.get_dummy_level_descriptor(this.settings);\n    this.current_state.init_level(level_descriptor);\n  }\n\n  set_test(json)\n  {\n    this.set_state(new LevelTest());\n    json = json || window.current_level_descriptor;\n    let level_descriptor = json || this.get_dummy_level_descriptor(this.settings);\n    this.current_state.init_level(level_descriptor);\n  }\n\n  set_online_level()\n  {\n    this.playing_view.restart_scores();\n    this.set_state(new NetworkedLevelPlayer(this.playing_view));\n    this.current_state.init_level();\n  }\n\n  set_editor(json)\n  {\n    this.set_state(new LevelEditor());\n\n    json = json || window.current_level_descriptor;\n    let level_descriptor = json || this.get_dummy_level_descriptor(this.settings);\n    this.current_state.init_level(level_descriptor);\n  }\n\n  editor_test()\n  {\n    let level_descriptor = this.current_state.export_level();\n    this.set_level(level_descriptor);\n  }\n\n  export_level()\n  {\n    return this.current_state.export_level();\n  }\n\n  update()\n  {\n    this.camera_controller.update();\n    this.home_view.update();\n    this.playing_view.update();\n    this.end_game_view.update();\n\n    this.current_state.update();\n\n    this.perspective_scale = this.settings.perspective_scale;\n    this.check_for_config_change(this.settings);\n\n    let wall_thickness = Configuration.wall_thickness;\n\n    let board_width = this.board_width + wall_thickness * 2;\n\n    // if (Screen.width > Screen.height && false)\n    // {\n    //   CameraManager.current.left = -Screen.aspect_ratio * board_width * 0.5 * this.perspective_scale;\n    //   CameraManager.current.right = Screen.aspect_ratio * board_width * 0.5 * this.perspective_scale;\n    //   CameraManager.current.top =     board_width * 0.5 * this.perspective_scale;\n    //   CameraManager.current.bottom = -board_width * 0.5 * this.perspective_scale;\n    // }\n    // else\n    // {\n    CameraManager.current.left = -board_width * 0.5 - wall_thickness;\n    CameraManager.current.right = board_width * 0.5 - wall_thickness;\n    CameraManager.current.top =     board_width * 0.5 / Screen.aspect_ratio;\n    CameraManager.current.bottom = -board_width * 0.5 / Screen.aspect_ratio;\n    // }\n\n    this.camera_controller.reference_position.y = (CameraManager.current.top - CameraManager.current.bottom) / 2 - Configuration.wall_thickness;\n    this.camera_controller.reference_position.x = board_width * 0.5;\n\n    this.camera_controller.reference_position.y += this.y_offset;\n\n    if (Input.right_mouse_button_pressed)\n    {\n      this.last_center.copy(TouchInput.center);\n    }\n\n    if (TouchInput.touches === 2)\n    {\n      let drag_delta = TouchInput.center.clone().sub(this.last_center);\n      this.target_y_offset += drag_delta.y * 0.05;\n    }\n\n    this.target_y_offset += Input.wheel_delta * 2;\n    this.target_y_offset  = Math.max(this.target_y_offset, 0);\n    let camera_height     = (CameraManager.current.top - CameraManager.current.bottom);\n    this.target_y_offset  = Math.min(29 + Configuration.wall_thickness * 2 - camera_height, this.target_y_offset);\n\n    this.y_offset += (this.target_y_offset - this.y_offset) * 0.1;\n\n    this.last_center.copy(TouchInput.center);\n    this.previous_touch_count = TouchInput.touches;\n  }\n\n  get_dummy_level_descriptor(settings)\n  {\n    let columns = settings.columns;\n    let rows = settings.rows;\n\n    let size_x = 1;\n    let size_y = 1;\n\n    let blocks = [];\n\n    for (let i = 0; i < columns * rows; i++)\n    {\n      let y = Math.floor(i / columns);\n      let x = (i % columns);\n      blocks.push({\n        id: i,\n        x: x * size_x + size_x * 0.5,\n        y: y * size_y + size_y * 0.5 + settings.lower_blank_space,\n        color_image: this.get_random_color_image(),\n        total_hp: 5\n      });\n    }\n\n    let level_descriptor = {\n      ball_radius: settings.ball_radius,\n      remaining_attempts: 3,\n      total_attempts: 3,\n      ball_color: '#00ffff',\n      wall_color: '#ff0000',\n      block_width: size_x,\n      block_height: size_y,\n      board_width: settings.board_width,\n      board_height: settings.board_height + settings.lower_blank_space,\n      blocks: [],\n      last_generated_id: blocks.length\n    };\n\n    level_descriptor = { amount_of_balls_to_fire: 5, total_attempts: 3, times_played: 0, ball_radius: 0.2, ball_color: '#00ffff', wall_color: '#ff0000', block_width: 1, block_height: 1, board_width: 9, board_height: 29, blocks: [{ id: 91, x: 4.5, y: 26.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 92, x: 3.5, y: 25.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 93, x: 5.5, y: 25.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 94, x: 2.5, y: 24.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 95, x: 1.5, y: 23.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 96, x: 6.5, y: 24.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 97, x: 7.5, y: 23.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 102, x: 3.5, y: 14.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 103, x: 4.5, y: 13.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 104, x: 5.5, y: 14.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 105, x: 0.5, y: 10.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 106, x: 1.5, y: 9.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 107, x: 1.5, y: 8.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 108, x: 0.5, y: 7.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 111, x: 3.5, y: 4.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 112, x: 5.5, y: 4.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 113, x: 0.5, y: 2.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 114, x: 8.5, y: 2.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 115, x: 8.5, y: 7.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 116, x: 7.5, y: 8.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 117, x: 7.5, y: 9.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 118, x: 8.5, y: 10.5, color_image: 'yellow', total_hp: 30, points_per_hit: 10, points_per_destruction: 25 }, { id: 119, x: 4.5, y: 4.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 120, x: 8.5, y: 8.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 121, x: 8.5, y: 9.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 122, x: 0.5, y: 9.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 123, x: 0.5, y: 8.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 124, x: 4.5, y: 14.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 125, x: 2.5, y: 23.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 126, x: 4.5, y: 25.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 127, x: 6.5, y: 23.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 130, x: 0.5, y: 20.5, color_image: 'green', total_hp: 150, points_per_hit: 10, points_per_destruction: 25 }, { id: 131, x: 0.5, y: 18.5, color_image: 'green', total_hp: 150, points_per_hit: 10, points_per_destruction: 25 }, { id: 132, x: 8.5, y: 20.5, color_image: 'green', total_hp: 150, points_per_hit: 10, points_per_destruction: 25 }, { id: 133, x: 8.5, y: 18.5, color_image: 'green', total_hp: 150, points_per_hit: 10, points_per_destruction: 25 }, { id: 134, x: 3.5, y: 19.5, color_image: 'blue', total_hp: 240, points_per_hit: 10, points_per_destruction: 25 }, { id: 135, x: 5.5, y: 19.5, color_image: 'blue', total_hp: 240, points_per_hit: 10, points_per_destruction: 25 }, { id: 136, x: 7.5, y: 19.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 137, x: 1.5, y: 19.5, color_image: 'red', total_hp: 90, points_per_hit: 10, points_per_destruction: 25 }, { id: 138, x: 4.5, y: 15.5, color_image: 'blue', total_hp: 240, points_per_hit: 10, points_per_destruction: 25 }, { id: 139, x: 4.5, y: 5.5, color_image: 'blue', total_hp: 240, points_per_hit: 10, points_per_destruction: 25 }], last_generated_id: 139 };\n\n    return level_descriptor;\n  }\n\n  __init_camera()\n  {\n    // let camera = new PerspectiveCamera(60, Screen.aspect_ratio, 0.1, 200);\n    // let camera = new THREE.OrthographicCamera(-Screen.width/2, Screen.width/2, Screen.height/2, -Screen.height/2, 0.1, 100);\n    let left  = -Screen.aspect_ratio * this.board_width * 0.5;\n    let right =  Screen.aspect_ratio * this.board_width * 0.5;\n\n    let top    = this.board_height * 2;\n    let bottom = -this.board_height * 2;\n\n    let camera = new OrthographicCamera(left, right, top, bottom, 0.1, 100);\n    camera.clear_color = new Color('#101014');\n    camera.clear_alpha = 1;\n\n    camera.updateProjectionMatrix();\n    camera.position.z = 10;\n\n    CameraManager.current = camera;\n  }\n\n  __init_camera_controller()\n  {\n    this.camera_controller.set_camera(CameraManager.current);\n    this.camera_controller.set_idle();\n    // this.camera_controller.set_debug_mode();\n\n    this.camera_controller.min_zoom = 1;\n    this.camera_controller.max_zoom = 40;\n    this.camera_controller.reference_zoom = 30;\n    this.camera_controller.reference_position.set(0, 0, 0);\n    // this.camera_controller.set_rotation(45, 0);\n  }\n\n  check_for_config_change(settings)\n  {\n    // let needs_resize = false;\n    // let needs_rebuild = false;\n\n    if (Math.abs(settings.board_width - this.board_width) > 0.001)\n    {\n      this.board_width = settings.board_width;\n      // needs_rebuild = true;\n    }\n    if (Math.abs(settings.board_height - this.board_height) > 0.001)\n    {\n      this.board_height = settings.board_height;\n      // needs_rebuild = true;\n    }\n    if (Math.abs(settings.lower_blank_space - this.lower_blank_space) > 0.001)\n    {\n      this.lower_blank_space = settings.lower_blank_space;\n      // needs_resize = true;\n    }\n  }\n}\n","import { Graphics } from 'ohzi-core';\nimport { RenderLoop } from 'ohzi-core';\nimport { Configuration } from 'ohzi-core';\nimport { EventManager } from 'ohzi-core';\nimport { Debug } from 'ohzi-core';\nimport { Input } from 'ohzi-core';\nimport { ResourceContainer } from 'ohzi-core';\nimport { ResourceBatch } from 'ohzi-core';\n\nimport GameApi from './js/components/GameApi';\n\nimport MainApplication from './MainApplication';\n\nclass Api\n{\n  constructor()\n  {\n    this.application = new MainApplication(Graphics);\n    this.resource_container = ResourceContainer;\n    this.render_loop = new RenderLoop(this.application, Graphics);\n    this.config = Configuration;\n  }\n\n  init()\n  {\n    let app_container = document.querySelector('.app-container');\n    let canvas = document.getElementById('main-canvas');\n\n    Graphics.init(canvas);\n    Configuration.dpr = window.devicePixelRatio;\n    Input.init(app_container, canvas);\n    Debug.init(Graphics);\n  }\n\n  dispose()\n  {\n    this.render_loop.stop();\n    Graphics._renderer.dispose();\n  }\n\n  draw_debug_axis()\n  {\n    Debug.draw_axis();\n  }\n\n  on_orientation_change()\n  {\n\n  }\n\n  register_event(name, callback)\n  {\n    EventManager.on(name, callback);\n  }\n\n  resource_loading_completed()\n  {\n    this.application.resources_fully_loaded();\n  }\n\n  set_resource(name, resource)\n  {\n    this.resource_container.set_resource(name, resource);\n  }\n\n  start()\n  {\n    this.render_loop.start();\n  }\n\n  stop()\n  {\n    this.render_loop.stop();\n  }\n\n  set_level(json)\n  {\n    this.application.set_level(json);\n  }\n\n  set_test(json)\n  {\n    this.application.set_test(json);\n  }\n\n  set_online_level()\n  {\n    this.application.set_online_level();\n  }\n\n  set_editor(json)\n  {\n    this.application.set_editor(json);\n  }\n\n  editor_test()\n  {\n    this.application.editor_test();\n  }\n\n  export_level()\n  {\n    return this.application.export_level();\n  }\n\n  set_api_endpoint(end_point)\n  {\n    GameApi.set_end_point(end_point);\n  }\n\n  set_session_id(session_id)\n  {\n    GameApi.set_session_id(session_id);\n  }\n\n  create_resource_batch()\n  {\n    return new ResourceBatch();\n  }\n}\n\nconst Game = new Api();\nexport { Game };\n"],"names":["$parcel$interopDefault","a","__esModule","default","GameApi","constructor","end_point","undefined","session_id","set_end_point","set_session_id","load_level_descriptor","level_descriptor_callback","config_is_valid","fetch","then","response","status","console","log","localStorage","removeItem","json","data","game_state","catch","err","shoot","firing_dir","url","headers","body","JSON","stringify","x","y","method","error","game_started","validate_score","turn_number","points","time","score","CameraViewState","on_enter","camera_controller","on_exit","update","TIME","CameraDebugState","oobb","pan_speed","Vector2","zoom_speed","zoom_t","tilt_degrees","tilt_speed","vector_down_axis","Vector3","vector_up_axis","vector_back_axis","vector_left_axis","tmp_dir","tmp_ray","Ray","tmp_intersection","tmp_mouse_dir","last_point","last_NDC","t_damping","input_enabled","camera","isOrthographicCamera","reference_zoom","Input","wheel_delta","left_mouse_button_pressed","right_mouse_button_pressed","copy","NDC","left_mouse_button_down","mouse_delta_dir","clone","sub","set_rotation_delta","right_mouse_button_down","prev_point","CameraUtilities","get_plane_intersection","reference_position","current_point","z","CameraMovementMode","ImmediateMode","rotation_speed","vector_forward_axis","tmp_forward","tmp_quat","Quaternion","tmp_camera_target_pos","reference_rotation","quaternion","dir","applyQuaternion","TMath","clamp","min_zoom","max_zoom","position","multiplyScalar","__last_reference_position","get_target_camera_pos","zoom","CameraController","camera_initial_rot","camera_initial_pos","current_state","current_mode","point_of_interest","normalized_zoom","vector_right_axis","tmp_right","orientation","tilt","tmp_size","current_tilt","current_orientation","projected_points","i","push","Debug","draw_sphere","hide_projected_points","projection_plane_helper","PlaneHelper","Plane","visible","SceneManager","current","add","projection_sphere_helper","draw_sphere_helper","Sphere","material","transparent","opacity","set_camera","set_state","state","set_mode","mode","set_normalized_zoom","update_normalized_zoom","distanceTo","MathUtilities","linear_map","debug_box","set_idle","camera_is_zoomed_out","set_debug_mode","set_rotation","old_orientation","build_rotation","set_tilt","new_tilt","setFromAxisAngle","Math","PI","old_tilt","conjugate","multiply","delta_x","delta_y","lerp_rotation","from_tilt","to_tilt","from_orientation","to_orientation","t","raw_orientation","lerp","abs","new_orientation","translate_forward","amount","normalize","translate_right","focus_on_bounding_box","bb","scale","getSize","obj_x","obj_y","object_aspect","Screen","aspect_ratio","height","width","getCenter","max","min","p1","p2","p3","p4","p5","p6","p7","p8","focus_camera_on_points","get_zoom_to_focus_on_bounding_box","original_zoom","original_pos","focus_camera_on_bounding_box","target_zoom","get_zoom_to_focus_on_points","old_zoom","old_pos","new_zoom","get_target_pos_to_focus_on_points","new_pos","focus_camera_on_sphere","sphere","debug","get_zoom_to_sphere","center","v_fov","fov","h_fov","atan","tan","aspect","distV","radius","distH","length","show_projected_points","show_plane_projection","plane","size","updateMatrixWorld","show_sphere_projection","set","zoom_scale","points_sphere","setFromPoints","world_space_center","camera_forward","THREE","far_pos","near_plane","ArrayUtilities","get_closest_point","setFromNormalAndCoplanarPoint","points_on_plane","_projected_points","projected_point","projectPoint","up","right","cross","mat","Matrix4","inverse_mat","getInverse","applyMatrix4","box","Box3","projected_center","__get_zoom_to_show_rect","get_current_tilt","get_current_orientation","degToRad","ApplicationView","name","container","start","on_resize","show","hide","HomeView","document","querySelector","EmptyState","Idle","level_player","Empty","GameStarted","player_view","show_start_playing_popup","game","delta_time","time_scale","update_view","WaitingForStart","is_prepare_to_play_view_showing","next_state","LoadingLevelDescriptor","level_descriptor","set_level_descriptor","set_next_state","can_play","can_fire","go_to_game_started","go_to_waiting_for_start","game_over","GameOver","EmptyGameListener","on_block_created","block_id","on_ball_created","ball","on_wall_created","wall","on_block_destroyed","on_ball_destroyed","ball_id","on_block_hit","block","on_wall_destroyed","wall_id","on_turn_ended","on_game_over","GameListener","game_block","remove_block","game_ball","remove_ball","remove_wall","create_block","create_ball","create_wall","turn","turn_ended","renderable_block","game_renderer","find_renderable_block","hit","WorldEntity","get_position","getPosition","set_position","setPosition","planck","Vec2","get_immediate_position","Block","id","total_hp","current_hp","color_image","points_per_hit","points_per_destruction","is_block","get_size","Wall","side","board_width","board_height","color","is_wall","get_normal","get_center","Ball","is_ball","velocity","apply_impulse","force_x","force_y","getFixtureList","shape","getRadius","LevelBuilder","world","collision_groups","BALL","pow","WALL","BLOCK","build_blocks","blocks_data","block_thickness","blocks","b","create_block_body","build_block","block_data","block_body","build_walls","walls","ground","create_wall_body","left_wall","right_wall","upper_wall","Edge","createBody","type","friction","density","createFixture","filterCategoryBits","filterMaskBits","userData","Box","build_ball","createDynamicBody","fixedRotation","setBullet","Circle","restitution","CollisionResolver","context","on_impact","impacted_fixture","user_data","getUserData","on_block_impact","on_wall_impact","block_fixture","get_block_by_body","getBody","remove_block_deferred","add_points","floor_fixture","get_wall_by_body","remove_ball_deferred","get_ball_on_wall_contact","fixA","fixB","get_ball_by_body","get_ball_on_block_contact","Context","game_listener","balls","balls_to_be_removed","blocks_to_be_removed","walls_to_be_removed","listener","check_for_pending_entities_to_be_removed","add_wall","destroyed_wall","destroyBody","filter","remove_wall_deferred","add_ball","destroyed_ball","add_block","destroyed_block","create_world","World","gravity","shift","dispose","Raycaster","raycast","ignore_fixture","result","rayCast","fixture","point","normal","fraction","valid","Simulation","game_context","collision_resolver","raycaster","solve","mul","invocaciones","current_pos","new_x","new_y","thickness","skin_offset","reflected_dir_x","reflected_dir_y","remaining_reflected_velocity","reflect_vector","reflected_velocity","n_dot_dir","dot","tmp","BaseState","can_start","import_state","export_state","WaitingToStart","Started","start_date","Date","elapsed_time","valueOf","over","ComputingScore","scores","times_played","current_points","reset_points","reload_blocks","WaitingForBallClear","start_time","Firing","firing_direction","firing_rate","elapsed_time_since_firing","firing_velocity","remaining_balls_to_fire","firing_speed","amount_of_balls_to_fire","fire_ball","ball_radius","firing_position","GameStateLoader","load","state_data","Game","total_attempts","simulation","new_state","fire_balls","get_clamped_firing_direction","value","import_blocks","remaining_attempts","angle","atan2","cos","sin","is_firing_dir_allowed","import_score","ball_color","wall_color","last_generated_id","export_blocks","level_builder","parse","LineTracer","trace","origin","planes","get_normal_plane","collision_points","bounce_count","ray","intersection","get_intersection","new_dir","direction","reflect","intersections","intersectPlane","closest_intersection","EntityArrayDrawer","entity_size","max_allocations","geo","SphereBufferGeometry","MeshBasicMaterial","mesh","InstancedMesh","instanceMatrix","usage","DynamicDrawUsage","draw_array","entities","makeScale","setMatrixAt","count","needsUpdate","draw_point_array","set_color","col","set_size","boolean","remove","geometry","BallArrayDrawer","PointArrayDrawer","total_available","ball_array_drawer","draw","resample_count","new_points","dist","separation_distance","point_count","p0","pos","RenderableEntity","RenderableBall","Configuration","wall_thickness","RenderableWall","game_wall","draw_cube","wall_pos","normal_dir","BlockMaterial","BaseShaderMaterial","_MainTex","_Emission","depthWrite","set_texture","tex","uniforms","set_emission","val","RenderableBlock","image","text_element","ResourceContainer","get","hp_label","text","hit_animation_time","Time","update_position","update_image","map","bool","GameRenderer","text_batch","init","SDFTextBatch","renderOrder","add_text","find_renderable_ball","remove_elem","remove_text","find_renderable_wall","GradientMaterial","_Col1","Color","_Col2","_BlueNoise","_Screen","GradientMesh","Mesh","PlaneBufferGeometry","LevelPlayer","line_tracer","point_array_drawer","firing_sphere","firing_point","current_level_descriptor","gradient","camera_drag_cooldown","time_scale_strength","start_cooldown","TouchInput","touches","mouse","unproject","CameraManager","start_point","clamped_firing_dir","unshift","left_mouse_button_released","fire","speed_up","is_mouse_within_bounds","uNDC","set_score","set_remaining_attempts","init_level","setup_scores","export_level","TestGameListener","balls_cleared","LevelTest","setTimeout","NetworkGameStarted","networked_level_player","NetworkWaitingForStart","LoadingOnlineLevelDescriptor","start_loading","self","NetworkedLevelPlayer","EditorGameListener","editor_context","LevelEditor","mock_block","renderable_mock_block","window","get_editor_level_descriptor","main_level_descriptor","floor","is_point_widthin_bounds","point_is_within_bounds","is_point_over_a_block","point_is_over_a_block","set_mock_block_visibility","set_mock_block_hp","destroy_nearest_block","create_game_block","editor_settings","block_color","is_widthin_bounds","is_over_a_block","block_hp","between","ref_pos","PlayingView","end_game_view","shot_time","best_shot","speed_up_el","speed_up_rect","getBoundingClientRect","remaining_attempts_el","start_playing_el","continue_button","scores_container","score_template","addEventListener","close_shooting_ended_message","bind","innerHTML","score_container","cloneNode","classList","set_shoot_score","append","contains","textContent","score_index","set_final_score","shot","restart_scores","index","toFixed","mouse_is_within_bounds","EndGameView","app","best_shot_el","time_el","score_el","home_button","next_button","on_home_button_click","on_next_button_click","restart_game","set_level","blur_background","unblur_background","event","MainApplication","BaseApplication","normal_render_mode","NormalRender","preventDefault","e","autoUpdate","get_random_color_image","arr","random","Graphics","perspective_scale","lower_blank_space","PerspectiveCamera","__init_camera","__init_camera_controller","config","get_resource","home_view","playing_view","squares","y_offset","target_y_offset","last_center","previous_touch_count","settings","columns","rows","ball_count","get_dummy_level_descriptor","set_test","set_online_level","set_editor","editor_test","check_for_config_change","left","top","bottom","drag_delta","camera_height","size_x","size_y","block_width","block_height","OrthographicCamera","clear_color","clear_alpha","updateProjectionMatrix","Api","application","resource_container","render_loop","RenderLoop","app_container","canvas","getElementById","dpr","devicePixelRatio","stop","_renderer","draw_debug_axis","draw_axis","on_orientation_change","register_event","callback","EventManager","on","resource_loading_completed","resources_fully_loaded","set_resource","resource","set_api_endpoint","create_resource_batch","ResourceBatch"],"version":3,"file":"game_api.js.map"}